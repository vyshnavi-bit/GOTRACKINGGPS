
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="icon" href="Images/s.png" type="image/x-icon" title="trackmyasset.in" />
    <title>TrackMyAsset | Liveview</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.5 -->
    <link rel="stylesheet" href="../bootstrap/css/bootstrap.css?v=1234">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <link href="../../CustomCSS/font-awesome.css" rel="stylesheet" />
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="../../dist/css/AdminLTE.css">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link rel="stylesheet" href="../../dist/css/skins/_all-skins.min.css">
    <link href="../../plugins/iCheck/all.css" rel="stylesheet" />
    <link href="../../plugins/iCheck/minimal/_all.css" rel="stylesheet" />
    <link href="../CustomCSS/responsive-table.css" rel="stylesheet" />

    <link rel="stylesheet" href="../../plugins/datatables/dataTables.bootstrap.css">
    <link rel="stylesheet" href="../../Client/CustomCSS/rangeslider.css?v=103">
    <link rel="stylesheet" href="../../plugins/pace/pace.css?v=1001">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <style type="text/css">
        .revcaret {
            display: inline-block;
            width: 0;
            height: 0;
            margin-left: 2px;
            vertical-align: middle;
            border-bottom: 4px dashed;
            border-bottom: 4px solid \9;
            border-right: 4px solid transparent;
            border-left: 4px solid transparent;
        }

        .dropdownckecklist {
            top: 0%;
            margin-bottom: 0px;
        }

            .dropdownckecklist dd,
            .dropdownckecklist dt {
                margin: 0px;
                padding: 0px;
            }

            .dropdownckecklist ul {
                margin: -1px 0 0 0;
            }

            .dropdownckecklist dd {
                position: relative;
            }

            .dropdownckecklist a,
            .dropdownckecklist a:visited {
                color: #fff;
                text-decoration: none;
                outline: none;
                font-size: 12px;
            }

            .dropdownckecklist dt a {
                background-color: #4F6877;
                display: block;
                padding: 8px 20px 5px 10px;
                height: 35px;
                line-height: 24px;
                overflow: hidden;
                border: 0;
            }

                .dropdownckecklist dt a span,
                .multiSel span {
                    cursor: pointer;
                    display: inline-block;
                    padding: 0 3px 2px 0;
                }

            .dropdownckecklist dd ul {
                background-color: #3c8dbc;
                border: 0;
                color: #fff;
                display: none;
                left: 0px;
                padding: 2px 15px 2px 5px;
                position: absolute;
                top: 2px;
                width: 100%;
                list-style: none;
                max-height: 200px;
                overflow: auto;
                z-index: 99999;
            }

            .dropdownckecklist dd li {
                padding: 2px;
            }

            .dropdownckecklist span.value {
                display: none;
            }

            .dropdownckecklist dd ul li a {
                padding: 5px;
                display: block;
            }

                .dropdownckecklist dd ul li a:hover {
                    background-color: #fff;
                }

        .loader,
        .loader:before,
        .loader:after {
            border-radius: 50%;
        }

            .loader:before,
            .loader:after {
                position: absolute;
                content: '';
            }

            .loader:before {
                width: 5.2em;
                height: 10.2em;
                background: #0dc5c1;
                border-radius: 10.2em 0 0 10.2em;
                top: -0.1em;
                left: -0.1em;
                -webkit-transform-origin: 5.2em 5.1em;
                transform-origin: 5.2em 5.1em;
                -webkit-animation: load2 2s infinite ease 1.5s;
                animation: load2 2s infinite ease 1.5s;
            }

        .loader {
            font-size: 5px;
            text-indent: -99999em;
            margin: 55px auto;
            position: relative;
            width: 10em;
            height: 10em;
            box-shadow: inset 0 0 0 1em #ffffff;
            -webkit-transform: translateZ(0);
            -ms-transform: translateZ(0);
            transform: translateZ(0);
        }

            .loader:after {
                width: 5.2em;
                height: 10.2em;
                background: #0dc5c1;
                border-radius: 0 10.2em 10.2em 0;
                top: -0.1em;
                left: 5.1em;
                -webkit-transform-origin: 0px 5.1em;
                transform-origin: 0px 5.1em;
                -webkit-animation: load2 2s infinite ease;
                animation: load2 2s infinite ease;
            }

        @-webkit-keyframes load2 {
            0% {
                -webkit-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        @keyframes load2 {
            0% {
                -webkit-transform: rotate(0deg);
                transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
                transform: rotate(360deg);
            }
        }

        .bpmouseover {
            height: 280px;
            width: 250px;
            display: none;
            position: absolute;
            z-index: 99999;
            padding: 10px 5px 5px 15px;
            background-color: #fffffc;
            border: 1px solid #c0c0c0;
            border-radius: 3px 3px 3px 3px;
            box-shadow: 3px 3px 3px rgba(0,0,0,0.3);
            font-family: Verdana;
            font-size: 12px;
            opacity: 1.0;
        }

        .filter-toggle {
            float: left;
            background-color: transparent;
            background-image: none;
            padding: 15px 15px;
            font-family: fontAwesome;
            color: #fff;
            cursor: pointer;
        }

            .filter-toggle:before {
                content: "\f0b0";
            }

        .skin-blue .main-header .navbar .filter-toggle:hover {
            color: #f6f6f6;
            background: rgba(0,0,0,0.1);
        }
    </style>
    <style type="text/css">
               .wrapper {
                   overflow: hidden;
                   top: 0px;
               }

               html, body {
                   margin-top: 0px;
                   padding-top: 0px;
                   margin-left: 0px;
                   padding-left: 0px;
                   height: 99.5%; /* needed for container min-height */
                   width: 100%;
                   overflow: hidden;
                   position: fixed;
                   background: url(../CustomCSS/cream_dust.png) repeat left top;
               }

               .inner {
                   width: 100%;
                   position: absolute;
                   left: 0px;
                   bottom: 0px;
                   right: 0px;
                   color: Black;
                   z-index: 99999;
                   height: 225px;
                   overflow: hidden;
               }

               .togglediv {
                   position: absolute;
                   width: 100%;
                   left: 0px;
                   bottom: 0px;
                   right: 0px;
                   color: Black;
                   z-index: 99999;
                   border: 1px solid #d5d5d5;
                   height: 196px;
                   background-color: #ffffff;
                   opacity: 0.9;
                   cursor: pointer;
               }

               .allbtncls {
                   display: inline-block;
                   min-width: 54px;
                   border: 1px solid #dcdcdc;
                   border: 1px solid rgba(0,0,0,0.1);
                   text-align: center;
                   color: #444;
                   font-size: 12px;
                   font-weight: bold;
                   height: 23px;
                   padding: 0 8px;
                   line-height: 27px;
                   -webkit-border-radius: 2px;
                   -moz-border-radius: 2px;
                   border-radius: 2px;
                   -webkit-transition: all 0.218s;
                   -moz-transition: all 0.218s;
                   -o-transition: all 0.218s;
                   transition: all 0.218s;
                   background-color: #f5f5f5;
                   background-image: -webkit-gradient(linear,left top,left bottom,from(#f5f5f5),to(#f1f1f1));
                   background-image: -webkit-linear-gradient(top,#f5f5f5,#f1f1f1);
                   width: 10px;
                   opacity: 1.9;
               }

               .btntogglecls:hover {
                   cursor: pointer;
                   -moz-box-shadow: 0px 0px 10px 0px #000000;
                   -webkit-box-shadow: 0px 0px 10px 0px #000000;
                   box-shadow: 0px 0px 10px 0px #000000;
               }

               .btntogglecls {
                   display: inline-block;
                   min-width: 80px;
                   border: 1px solid rgba(0,0,0,0.1);
                   text-align: center;
                   color: #444;
                   font-size: 12px;
                   font-weight: bold;
                   height: 30px;
                   border-radius: 2px 2px 0px 0px;
                   width: 10px;
                   cursor: pointer;
                   opacity: 2.0;
               }

               div#historymapcontent {
                   bottom: 0px;
                   top: 40px;
                   left: 0px;
                   right: 0px;
                   overflow: hidden;
                   position: absolute;
               }

               .datebuttonsleft {
                   border-radius: 3px 0px 0px 0px;
                   width: 75px;
                   height: 26px;
               }

               .datebuttonsright {
                   border-radius: 0px 3px 0px 0px;
                   width: 75px;
                   height: 26px;
               }

        /*
         *  STYLE 5
         */

        #divvehicles::-webkit-scrollbar-track {
            -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
            background-color: #F5F5F5;
        }

        #divvehicles::-webkit-scrollbar {
            width: 10px;
            background-color: #F5F5F5;
        }

        #divvehicles::-webkit-scrollbar-thumb {
            background-color: #9E9E9E;
            background-image: -webkit-gradient(linear, 0 0, 0 100%, color-stop(.5, rgba(255, 255, 255, .2)), color-stop(.5, transparent), to(transparent));
        }

    </style>
</head><!-- ADD THE CLASS layout-top-nav TO REMOVE THE SIDEBAR. -->
<body class="hold-transition skin-blue layout-top-nav" style="position: fixed; top: 0; bottom: 0; left: 0; right: 0;">
    <div class="view view-main"></div>
    <div class="wrapper">
        <header class="main-header">
            <nav class="navbar navbar-static-top">
                <div class="container" style="width: 100%;">
                    <div class="navbar-header">
                        <a id="a_vehtoggle" style="cursor:pointer;" class="sidebar-toggle" role="button">
                            <span class="sr-only">Toggle navigation</span>
                        </a>
                        <a class="navbar-brand"><b>TrackMyAsset</b></a>
                        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse">
                            <i class="fa fa-bars"></i>
                        </button>
                        <a id="a_filtertoggle" style="cursor:pointer;" title="Filters" class="filter-toggle" role="button">
                            <span class="sr-only">Toggle navigation</span>
                        </a>
                    </div>
                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse pull-left" id="navbar-collapse">
                        <ul class="nav navbar-nav" id="ul_navigation_mainmenu"></ul>
                    </div><!-- /.navbar-collapse -->
                    <!-- Navbar Right Menu -->
                    <div class="navbar-custom-menu">
                        <ul class="nav navbar-nav">
                            <!-- Messages: style can be found in dropdown.less-->
                            <li class="dropdown messages-menu">
                                <!-- Menu toggle button -->
                                <a style="cursor:pointer;" class="dropdown-toggle" data-toggle="dropdown">
                                    <i class="fa fa-taxi"></i>
                                    <span class="label label-warning" id="lblvehscount">0</span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li class="header">Total Vehicles <span class="label label-success" id="lblvehscount1"></span></li>
                                    <li>
                                        <!-- inner menu: contains the messages -->
                                        <ul class="menu" id="ul_showallvehs"></ul><!-- /.menu -->
                                    </li>
                                </ul>
                            </li><!-- /.messages-menu -->
                            <!-- Alerts Menu -->
                            <li class="dropdown messages-menu">
                                <!-- Menu Toggle Button -->
                                <a style="cursor:pointer;" class="dropdown" data-toggle="dropdown">
                                    <i class="fa fa-bell-o"></i>
                                    <span class="label label-danger" id="icon_alertcount">0</span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li class="header">Today Alerts <span class="label label-danger" id="icon_alertcount1"></span></li>
                                    <li>
                                        <!-- inner menu: contains the messages -->
                                        <ul class="menu" id="ul_alerts"></ul><!-- /.menu -->
                                    </li>
                                </ul>
                            </li>
                            <!-- Notifications Menu -->
                            <li class="dropdown messages-menu" style="display:none;">
                                <!-- Menu toggle button -->
                                <a style="cursor:pointer;" class="dropdown-toggle" data-toggle="dropdown">
                                    <i class="fa fa-check-square-o"></i>
                                    <span class="label label-default" id="icon_workingvehicles">0</span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li class="header">Working Vehicles <span class="label label-default" id="icon_workingvehicles1"></span></li>
                                    <li>
                                        <!-- inner menu: contains the messages -->
                                        <ul class="menu" id="ul_showworkingvehs"></ul><!-- /.menu -->
                                    </li>
                                </ul>
                            </li>
                            <!-- Tasks Menu -->
                            <li class="dropdown messages-menu" style="display:none;">
                                <!-- Menu Toggle Button -->
                                <a style="cursor:pointer;" class="dropdown-toggle" data-toggle="dropdown">
                                    <i class="fa fa-ban"></i>
                                    <span class="label label-danger" id="icon_notworkingvehicles">0</span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li class="header">Not Working Vehicles <span class="label label-danger" id="icon_notworkingvehicles1"></span></li>
                                    <li>
                                        <!-- inner menu: contains the messages -->
                                        <ul class="menu" id="ul_shownonworkingvehs"></ul><!-- /.menu -->
                                    </li>
                                </ul>
                            </li>
                            <!-- User Account Menu -->
                            <li class="dropdown user user-menu">
                                <!-- Menu Toggle Button -->
                                <a style="cursor:pointer;" class="dropdown-toggle" data-toggle="dropdown">
                                    <!-- The user image in the navbar-->
                                    <img src="../../dist/img/avatar5.png" class="user-image" alt="User Image">
                                    <!-- hidden-xs hides the username on small devices so only the image appears. -->
                                    <span class="hidden-xs" id="lbl_username">Guest</span>
                                </a>
                            </li>
                            <li id="logout_click" style="cursor:pointer;"><a>Sign out</a></li>
                        </ul>
                    </div><!-- /.navbar-custom-menu -->
                </div><!-- /.container-fluid -->
            </nav>
        </header>
        <!-- Control Sidebar -->
        <aside id="vehicles-sidebar" class="control-sidebar control-sidebar-dark control-sidebar-open" style="height:100%;opacity:0.9; width: 300px; background-color: #f9fafc; color: black;border-right:1px solid #d5d5d5;">
            <!-- Tab panes -->
            <div class="tab-content" style="padding:0px;">
                <!-- Home tab content -->
                <!--<dl class="dropdownckecklist">
                    <dt>
                        <a style="cursor:pointer;">
                            <p class="multiSel" id="div_vehmutliSel">
                                <span class="hida">All Vehicles</span>
                            </p>
                        </a>
                    </dt>
                    <dd>
                        <div class="mutliSelect" id="div_vehmutliSelect">
                        </div>
                    </dd>
                </dl>-->
                <input type="text" id="search" placeholder="Search Vehicle" class="form-control" style="border-top-width: 2px;">
                <div class="col-md-12" style="padding:3px 0px;border-bottom: 1px solid #d5d5d5; background-color:beige;">
                    <div class="col-md-6" style="padding-left: 4px;">
                        <input type="checkbox" value="SelectAll" id="ckballveh" class="minimal" />
                        <span style="height: 15px;vertical-align: sub;">Select All</span>
                    </div>
                    <div class="col-md-6">
                        <input type="button" class="btn btn-block btn-primary btn-xs" id="btn_selectmap" onclick="btn_selectmap_click(this)" value="Openstreet Map" />
                    </div>
                </div>
                <div class="loader" id="veh_loader">Loading...</div>
                <div>
                    <div id="divvehicles" style="top: 114px; bottom: 0px; overflow: auto; position: absolute; width: 100%;">
                        <div id="divAllvehicles" class="slimScrollDiv">
                        </div>
                    </div>
                </div><!-- /.tab-pane -->
            </div>
        </aside><!-- /.control-sidebar -->
        <!-- Control Filter -->
        <aside id="filters-sidebar" class="" style="position: absolute;left:-300px; top: 50px; bottom: 0px; opacity: 1.0; width: 300px; background-color: #f9fafc; color: black; z-index: 99999;">
            <div class="box box-default" style="height: 100%;">
                <div class="box-header with-border">
                    <h3 class="box-title">Filters</h3>
                    <a style="cursor:pointer;float:right;" onclick="clear_filters_click();">Clear Filters</a>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12" style="overflow: auto; position: absolute; bottom: 0px; top: 40px; width: 100%;">
                            <div id="div_filters">
                                <div id="divAllfilters" class="slimScrollDiv">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </aside><!-- /.control-Filter -->
        <!-- Full Width Column -->
        <div class="content-wrapper">
            <div class="container" style="width: 100%;padding:0;">
                <div style="width: 100%; height: 100%;">
                    <div style="width: 100%;">
                        <div id="mapcontent">
                            <div id="div_liveview">
                                <div id="googleMap" style="top: 50px; bottom: 0px; left: 0px; right: 0px; position: absolute; background-color: rgb(229, 227, 223);display: none;">
                                </div>
                                <div id="openstreetmap" style="top: 50px; bottom: 0px; left: 0px; right: 0px; position: absolute; background-color: rgb(229, 227, 223);display: none;">
                                </div>
                                <div id="expiredmsg" style="top: 50px; bottom: 0px; left: 0px; right: 0px; position: absolute; background-color: rgb(229, 227, 223);display: none;">
                                    <table style="width: 100%; height: 100%;">
                                        <tr>
                                            <td style="width: 20%;"></td>
                                            <td style="width: 60%; text-align: center;">
                                                <img src="Images/expired.png" />
                                                <br />
                                                <span style="font-size: 20px; font-weight: bold; color: Red;">
                                                    YOUR ACCOUNT HAS BEEN
                                                    EXPIRED.
                                                </span><br />
                                                <br />
                                                <span style="font-size: 20px; font-weight: bold; color: Red;">
                                                    PLEASE MAKE PAYMENT TO
                                                    RETRIEVE YOUR SERVICES.
                                                </span><br />
                                                <br />
                                                <span style="font-size: 15px; font-weight: bold; color: Navy;">Account Details :-</span><br />
                                                <span style="font-size: 15px; font-weight: bold; color: Navy;">A/C NUMBER : 123456,</span><br />
                                                <span style="font-size: 15px; font-weight: bold; color: Navy;">
                                                    A/C NAME : Sri Vyshnavi Dairy Spl Pvt Ltd,
                                                </span><br />
                                                <span style="font-size: 15px; font-weight: bold; color: Navy;">BANK NAME : HDFC,</span><br />
                                                <span style="font-size: 15px; font-weight: bold; color: Navy;">BRANCH : Chennai,</span><br />
                                                <span style="font-size: 15px; font-weight: bold; color: Navy;">IFSC CODE : IFCBD565,</span><br />
                                                <span style="font-size: 15px; font-weight: bold; color: Navy;">
                                                    FOR PAYMENT INFO CALL
                                                    : 9840025389.
                                                </span>
                                            </td>
                                            <td style="width: 20%;"></td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            <div id="div_reports" style="top: 52px; bottom: 0px; left: 0px; right: 0px; position: absolute; display: block; background-color: rgb(229, 227, 223);display: none;">
                                <div class="col-md-12" style="top: 0px;bottom: 0px;overflow: auto;position: absolute;width: 100%;padding:5px;">
                                    <div class="box box-primary">
                                        <div class="box-header" style="text-align:center;">
                                            <h3 id="lbl_reporttype">Report</h3>
                                        </div>
                                        <div class="box-body">
                                            <div class="col-md-3">
                                            </div>
                                            <!-- Date range -->
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label>From Date:</label>
                                                    <div class="input-group">
                                                        <div class="input-group-addon">
                                                            <i class="fa fa-calendar"></i>
                                                        </div>
                                                        <input type="datetime-local" class="form-control pull-right" id="txt_startdate">
                                                    </div><!-- /.input group -->
                                                </div><!-- /.input group -->
                                            </div><!-- /.form group -->
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label>To Date:</label>
                                                    <div class="input-group">
                                                        <div class="input-group-addon">
                                                            <i class="fa fa-calendar"></i>
                                                        </div>
                                                        <input type="datetime-local" class="form-control pull-right" id="txt_enddate">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-3" id="div_Reports_TimeGap">
                                                <div class="form-group">
                                                    <label id="lbl_timegap">Interval</label>
                                                    <div class="input-group">
                                                        <div class="input-group-addon">
                                                            <i class="fa fa-filter"></i>
                                                        </div>
                                                        <input type="text" class="form-control pull-right" id="txt_Reports_TimeGap">
                                                        <select class="form-control" id="slct_report_mainlocation"></select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <input id="btn_generate" value="Get Data" type="button" class="btn btn-block btn-primary" onclick="btn_generate_Click()" />
                                                    <label style="cursor:pointer;float:right;">
                                                        <a href="exporttoxl_utility.ashx">Export to XL</a>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="box-body">
                                            <div class="loader" id="loader_report">Loading...</div>
                                            <div>
                                                <table id="tbl_report" class="responsive-table"></table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="div_drawroute" style="top: 52px; bottom: 0px; left: 0px; right: 0px; position: absolute; display: block; background-color: rgb(229, 227, 223);display: none;">

                            </div>
                        </div>
                        <div id="displaydiv" class="bpmouseover">
                        </div>
                    </div>
                </div><!-- /.container -->
            </div><!-- /.content-wrapper -->
        </div>
    </div> <!-- ./wrapper -->

    <div id="div_todayhistory" style="position: fixed;background-color: rgba(0, 0, 0, 0.66);top: 0;right: 0;bottom: 0; left: 0; z-index: 1050; display: none; overflow: hidden; -webkit-overflow-scrolling: touch; outline: 0;">
        <div style="position: absolute; width: auto; margin: 3%;left:0px;right:0px;top:0px;bottom:0px;">
            <!-- Modal -->
            <div style="position: relative; background-color: #fff; -webkit-background-clip: padding-box; background-clip: padding-box; border: 1px solid #999; border: 1px solid rgba(0, 0, 0, .2); border-radius: 0px; outline: 0; -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, .5); box-shadow: 0 3px 9px rgba(0, 0, 0, .5); height:100%;">
                <!-- Date range -->
                <div class="row">
                    <button type="button" class="close" style="padding-right: 10px; padding-top: 5px; z-index:99999;position:absolute;right:0px;" onclick="close_historymodel();">&times;</button>
                    <!--<div class="col-lg-2" style="width: 180px;">
                        <i style="padding: 10px;" class="fa fa-cab"></i><label style="padding-top: 10px;">TrackMyAsset | </label>
                    </div>-->
                    <div class="col-lg-4" style="margin-top: 10px;margin-left: 10px;">
                        <i style="padding-right: 5px;" class="fa fa-cab"></i><label id="lbltripinfo" style="font-size: 14px;"></label>
                    </div>
                    <div class="col-lg-3" style="margin-top: 3px;margin-left: 3px; width: 260px;z-index:99999;">
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input class="form-control pull-right" type="datetime-local" id="txt_startdate_history" />
                        </div>
                    </div>
                    <div class="col-lg-3" style="margin-top: 3px; margin-left: 5px; width: 260px;z-index:99999;width: 260px;">
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input class="form-control pull-right" type="datetime-local" id="txt_enddate_history" />
                        </div>
                    </div>
                    <div class="col-lg-2" style="margin-top: 3px;margin-left: 3px; width: 100px;z-index:99999;">
                        <input type="button" class="btn btn-primary" id="btn_gethistory" value="Get Data" onclick="btn_gethistory_click();" />
                    </div>
                </div>
                <div>
                    <div id="historymapcontent">
                        <div id="historygoogleMap" style="width: 100%; height: 100%; position: relative; background-color: rgb(229, 227, 223);">
                        </div>
                    </div>
                </div>
                <input type="button" class="btntogglecls" value="Show Logs" id="btnshowdiv" style="float: right;
                    background-color: Black; color: White;position: absolute; right: 0; bottom: 0;display:block;" onclick="clicked();" />
                <div class="togglediv">
                    <div class="inner">
                        <input type="button" class="btntogglecls" value="Hide" id="btnshowhide" style="float: right;
                    background-color: Black; color: White;" onclick="clicked();" />
                        <div id="divlogsgrid" style="height:195px; cursor: auto; border: 1px solid #d5d5d5;
                    position: absolute; font-family: Arial; font-weight: normal; font-size: 12px;
                    float: left;width:100%;bottom:0px;">
                            <table id="example" class="table table-condensed" style="cursor: pointer; overflow: scroll; border: 1px solid #ffffff;height:195px;
                        font-family: Arial; font-weight: normal; font-size: 12px;" cellpadding="2px"
                                   cellspacing="0px" summary="Route Details" rules="groups" frame="hsides" border="2">
                                <tr>
                                    <td style="padding:0px;">
                                        <table class="table table-condensed" style="cursor: pointer; overflow: scroll; border: 1px solid #ffffff; font-family: Arial;
                                    font-weight: normal; font-size: 12px;" cellpadding="2px" cellspacing="0px">
                                            <tr style="border-bottom: 1px solid #d5d5d5; background-color: #f39c12; color: #ffffff;
                                        font-family: Arial; font-weight: normal; font-size: 12px;">
                                                <th style="width: 150px;">
                                                    TimeStamp
                                                </th>
                                                <th style="width: 400px;">
                                                    Address
                                                </th>
                                                <th style="width: 100px;">
                                                    Speed
                                                </th>
                                                <th style="width: 100px;">
                                                    Odometer
                                                </th>
                                                <th style="width: 100px;">
                                                    Status
                                                </th>
                                                <th style="width: 150px;">
                                                    Stopped Time
                                                </th>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <div id="divscroll" style="width: 100%; height: 155px; overflow: auto;">
                                            <table class="table table-striped" style="cursor: pointer; overflow: scroll; border: 1px solid #ffffff; font-family: Arial;
                                        font-weight: normal; font-size: 12px;" cellpadding="2px" cellspacing="0px">
                                                <tr id="templateRow" style="display: none; cursor: pointer; border-bottom: 1px solid #d5d5d5;"
                                                    onclick="onrowclick(this);">
                                                    <td style="width: 150px; text-align: center; border-bottom: 1px solid #d5d5d5;"></td>
                                                    <td style="width: 400px; text-align: center; border-bottom: 1px solid #d5d5d5;"></td>
                                                    <td style="width: 100px; text-align: center; border-bottom: 1px solid #d5d5d5;"></td>
                                                    <td style="width: 100px; text-align: center; border-bottom: 1px solid #d5d5d5;"></td>
                                                    <td style="width: 150px; text-align: center; border-bottom: 1px solid #d5d5d5;"></td>
                                                    <td style="width: 150px; text-align: center; border-bottom: 1px solid #d5d5d5;"></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div style="float: right; position: absolute; top: -3px; left: 50px;">
                            <table class="table table-condensed">
                                <tr>
                                    <td>
                                        <input type="button" class="btn btn-block btn-info btn-sm" style="height: 28px; opacity: 1.0; width: 100px;" onclick="tableToExcel('example', 'W3C Example Table')" value="Export to Excel">
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- jQuery 2.1.4 -->
    <script src="../../plugins/jQuery/jQuery-2.1.4.min.js"></script>
    <!-- Bootstrap 3.3.5 -->
    <script src="../../bootstrap/js/bootstrap.min.js"></script>
    <!-- SlimScroll -->
    <script src="../../plugins/slimScroll/jquery.slimscroll.min.js"></script>
    <!-- FastClick -->
    <script src="../../plugins/fastclick/fastclick.min.js"></script>
    <!-- AdminLTE App -->
    <script src="../../dist/js/app.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="../../dist/js/demo.js"></script>
    <script src="../../plugins/iCheck/icheck.js"></script>

    <!--<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet-0.7/leaflet.js"></script>-->
    <link href="../../leaflet/leaflet.css" rel="stylesheet" />
    <script src="../../leaflet/leaflet.js"></script>
    <link href="../../leaflet/dist/MarkerCluster.css" rel="stylesheet" type="text/css" />
    <link href="../../leaflet/dist/MarkerCluster.Default.css" rel="stylesheet" type="text/css" />
    <script src="../../leaflet/dist/leaflet.markercluster.js" type="text/javascript"></script>
    <script src="../../leaflet/realworld.388.js" type="text/javascript"></script>
    <link href="../../leaflet/screen.css" rel="stylesheet" type="text/css" />
    <script src="../../leaflet/leaflet.geocoding.js" type="text/javascript"></script>
    <script src="../../js/JTemplate.js?v=1002" type="text/javascript"></script>
    <!--<script src="customapp.js?v=3" type="text/javascript"></script>-->
    <script src="../../Newjs/markerclusterer_GZ.js?v=1002" type="text/javascript"></script>
    <!--<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=geometry"></script>-->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDbt9z3InHbzrV66t1eSZB5TnlJ2HQ-Uc8&v=3.exp&sensor=false&libraries=geometry"></script>
    <script src="../../Newjs/markerclusterer_GZ.js" type="text/javascript"></script>
    <script src="../../Newjs/infobox.js" type="text/javascript"></script>
    <script src="js/framework7.js"></script>
    <script src="js/ClientCustomjs.js?v=3"></script>
    <script src="js/Clientmodulers.js?v=2"></script>
    <script src="../Data_tables/bootbox.min.js"></script>

    <script type="text/javascript" src="../plugins/jquery.touchSwipe.min.js"></script>

    <script src="../../plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="../../plugins/datatables/dataTables.bootstrap.min.js"></script>
    <script src="../../Client/js/rangeslider.js?v=102"></script>
    <script src="../../plugins/pace/pace.min.js"></script>

    <script type="text/javascript">

        $(function () {
            var windowsize = $(window).width();
            if (windowsize < 767) {
                //Enable swiping...
                $("body").swipe({
                    //Generic swipe handler for all directions
                    swipe: function (event, direction, distance, duration, fingerCount, fingerData) {
                        if (event.changedTouches[0].clientX < 60 && direction == 'right') {
                            if (vehpnlhidden) {
                                $("#vehicles-sidebar").stop().animate({ left: 0 }, 100);
                                vehpnlhidden = false;
                            }
                            //alert(event.clientX + ' direction ' + direction + ' distance ' + distance + ' duration ' + duration + ' fingerCount ' + fingerCount + ' fingerData ' + fingerData);
                        }
                        else if (direction == 'left' && distance > 50) {
                            var windowsize = $(window).width();
                            if (windowsize < 767) {
                                $("#vehicles-sidebar").css('margin-left', 0);
                                $("#vehicles-sidebar").css('margin-right', 0);
                                $("#vehicles-sidebar").animate({ left: '-300px' }, 100);
                                vehpnlhidden = true;

                                $("#filters-sidebar").css('margin-left', 0);
                                $("#filters-sidebar").css('margin-right', 0);
                                $("#filters-sidebar").animate({ left: '-300px' }, 100);
                                hidden = true;
                            }
                        }
                    },
                    //Default is 75px, set to 0 for demo so any distance triggers swipe
                    threshold: 5,
                    allowPageScroll: "auto"
                });
            }
        });
    </script>

    <script type="text/javascript">

        function clear_filters_click() {
            $('.ckb_filter').each(function () {
                $(this).prop('checked', false);
            });
            for (var i = 0; i < allvehsdata.length; i++) {
                if (vehiclenos.indexOf(allvehsdata[i].idvehicle_properties) == -1) {
                    vehiclenos.push(allvehsdata[i].idvehicle_properties);
                    vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                }
            }
            $('#divAllvehicles').css('display', 'block');
            $('#divAllvehicles').setTemplateURL('liveview2.htm');
            $('#divAllvehicles').processTemplate(vehicletypes);
            document.getElementById('lblvehscount').innerHTML = vehiclenos.length;

            get_deviceconfig();
            //iCheck for checkbox and radio inputs
            $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                checkboxClass: 'icheckbox_minimal-blue',
                radioClass: 'iradio_minimal-blue'
            });
            $('#ckballveh').on('ifChanged', function (event) {
                onallcheck(this);
            });
            $('.ckblvvehscls').on('ifChanged', function (event) {
                var ckdval = $(this);
                oncheck(this, ckdval[0].id);
            });
            checkedvehicles = [];
            $($('#ckballveh')).iCheck('uncheck');
            liveupdate();
        }
        $(function () {
            var data = { 'op': 'get_locations' };
            var s = function (msg) {
                if (msg) {
                    Locationsdata = msg;
                    $('#slct_report_mainlocation').empty();
                    $("#slct_report_mainlocation").append('<option value="0">Select Main Location</option>');
                    for (var i = 0; i < msg.length; i++) {
                        if (msg[i].Ismain_location == "True") {
                            $("#slct_report_mainlocation").append('<option value="' + msg[i].Sno + '">' + msg[i].locacationname + '</option>');
                        }
                    }
                    fillfilters();
                }
                else {
                    fillfilters();
                }
            };
            var e = function (x, h, e) {
                // $('#BookingDetails').html(x);
            };
            callHandler(data, s, e);
        });
        var hidden = true;
        var vehpnlhidden = false;
        function fillfilters() {
            $("#a_filtertoggle").click(function () {
                if (hidden) {
                    $("#vehicles-sidebar").stop().animate({ left: 300 }, 100);
                    $("#filters-sidebar").stop().animate({ left: 0 }, 300);
                    vehpnlhidden = false;
                    hidden = false;
                }
                else {
                    $("#vehicles-sidebar").animate({ left: 0 }, 100);
                    $("#filters-sidebar").css('margin-left', 0);
                    $("#filters-sidebar").css('margin-right', 0);
                    $("#filters-sidebar").animate({ left: '-300px' }, 300);
                    hidden = true;
                }
            });
            $("#a_vehtoggle").click(function () {
                if (vehpnlhidden) {
                    $("#vehicles-sidebar").stop().animate({ left: 0 }, 100);
                    vehpnlhidden = false;
                }
                else {
                    $("#vehicles-sidebar").css('margin-left', 0);
                    $("#vehicles-sidebar").css('margin-right', 0);
                    $("#vehicles-sidebar").animate({ left: '-300px' }, 100);
                    vehpnlhidden = true;

                    $("#filters-sidebar").css('margin-left', 0);
                    $("#filters-sidebar").css('margin-right', 0);
                    $("#filters-sidebar").animate({ left: '-300px' }, 100);
                    hidden = true;
                }
            });
            var ddl_vehstatus = '<div class="tab-content" style="padding:0px;"><div class="form-group"><label>Select Vehicle Status</label>';
            ddl_vehstatus += '<dl class="dropdownckecklist"><dt><a style="cursor:pointer;"><p class="multiSel"><span id="ddl_vehiclestatus" class="hida" title="Vehicle Status">Vehicle Status</span></p></a></dt><dd><div class="mutliSelect">';
            ddl_vehstatus += "<ul>";
            ddl_vehstatus += "<li><input type='checkbox' class='ckb_filter' value='Stopped Vehicles' /><span style='vertical-align: top;padding:2px;'>Stopped Vehicles</span></li>";
            ddl_vehstatus += "<li><input type='checkbox' class='ckb_filter' value='Running Vehicles' /><span style='vertical-align: top;padding:2px;'>Running Vehicles</span></li>";
            ddl_vehstatus += "<li><input type='checkbox' class='ckb_filter' value='Inside POI Vehicles' /><span style='vertical-align: top;padding:2px;'>Inside POI Vehicles</span></li>";
            ddl_vehstatus += "<li><input type='checkbox' class='ckb_filter' value='Outside POI Vehicles' /><span style='vertical-align: top;padding:2px;'>Outside POI Vehicles</span></li>";
            ddl_vehstatus += "<li><input type='checkbox' class='ckb_filter' value='MainPower Off Vehicles' /><span style='vertical-align: top;padding:2px;'>MainPower Off Vehicles</span></li>";
            ddl_vehstatus += "<li><input type='checkbox' class='ckb_filter' value='Delay in Update Vehicles' /><span style='vertical-align: top;padding:2px;'>Delay in Update Vehicles</span></li>";
            ddl_vehstatus += "<li><input type='checkbox' class='ckb_filter' value='Working Vehicles' /><span style='vertical-align: top;padding:2px;'>Working Vehicles</span></li>";
            ddl_vehstatus += "</ul>";
            ddl_vehstatus += '</div></dd></dl></div></div>';
            $('#divAllfilters').append(ddl_vehstatus);

            var data = { 'op': 'get_minimasters' };
            var s = function (msg) {
                if (msg) {
                    if (msg && msg != "Error") {
                        var minimastertypeclslist = msg.minimastertypeclslist;
                        var minimastersclslist = msg.minimastersclslist;
                        for (var i = 0; i < minimastertypeclslist.length; i++) {
                            //Locationsdata
                            if (minimastertypeclslist[i].isfilter == '1') {
                                var ddl_multislct = '<div class="tab-content" style="padding:0px;"><div class="form-group"><label>Select ' + minimastertypeclslist[i].minimaster_name + '</label>';
                                ddl_multislct += '<dl class="dropdownckecklist"><dt><a style="cursor:pointer;"><p class="multiSel"><span class="hida" title=' + minimastertypeclslist[i].idminimaster + '>' + minimastertypeclslist[i].minimaster_name + '</span></p></a></dt><dd><div class="mutliSelect">';

                                //ddl_multislct += "<ul><li><input type='checkbox' value='Select All' onclick='filterslctallclick(this);' /><span style='vertical-align: top;padding:2px;'>Select All</span></li>";
                                ddl_multislct += "<ul>";
                                if (minimastertypeclslist[i].islocation != '1') {
                                    for (var j = 0; j < minimastersclslist.length; j++) {
                                        if (minimastersclslist[j].idminimaster == minimastertypeclslist[i].idminimaster) {
                                            ddl_multislct += "<li><input type='checkbox' class='ckb_filter' value=" + minimastersclslist[j].idminimaster_data + " /><span style='vertical-align: top;padding:2px;'>" + minimastersclslist[j].minimaster_value + "</span></li>";
                                        }
                                    }
                                }
                                else {
                                    for (var l = 0; l < Locationsdata.length; l++) {
                                        if (Locationsdata[l].Ismain_location == "True") {
                                            ddl_multislct += "<li><input type='checkbox' class='ckb_filter' value=" + Locationsdata[l].Sno + " /><span style='vertical-align: top;padding:2px;'>" + Locationsdata[l].locacationname + "</span></li>";
                                        }
                                    }
                                }
                                ddl_multislct += "</ul>";
                                ddl_multislct += '</div></dd></dl></div></div>';
                                $('#divAllfilters').append(ddl_multislct);
                            }
                        }


                        $(".dropdownckecklist dt a").on('click', function () {
                            $(this).closest('.dropdownckecklist').find('ul').slideToggle('fast');
                        });

                        $(".dropdownckecklist dd ul li a").on('click', function () {
                            $(this).closest('.dropdownckecklist').find('ul').hide();
                        });
                        $(document).bind('click', function (e) {
                            var $clicked = $(e.target);
                            if (!$clicked.parents().hasClass("dropdownckecklist")) $(".dropdownckecklist dd ul").hide();
                        });
                        $('.ckb_filter').click(function () {
                            vehicletypes = [];
                            $('#divAllvehicles').css('display', 'block');
                            $('#divAllvehicles').setTemplateURL('liveview2.htm');
                            $('#divAllvehicles').processTemplate(vehicletypes);

                            var statuses = $(this).val();
                            if (slctdmap == "Openstreet Map") {
                                deleteOverlaysOSM();
                            }
                            else {
                                deleteOverlays();
                            }
                            var j = 0;
                            latlng_pos = [];
                            vehiclenos = [];
                            var checkedcnt = 0;
                            var minimasterfilterclslist = [];
                            $('.dropdownckecklist').each(function () {
                                var idminimaster = $(this).find('.hida').html();
                                if (idminimaster != "Vehicle Status") {
                                    var minimastersclslist = [];
                                    $(this).find('li').each(function () {
                                        if ($(this).find('input').prop('checked') == true) {
                                            var idminimaster_data = $(this).find('input').val();
                                            minimastersclslist.push({ idminimaster_data: idminimaster_data });
                                            checkedcnt++;
                                        }
                                    });
                                    if (minimastersclslist.length > 0)
                                        minimasterfilterclslist.push({ 'idminimaster': idminimaster, 'minimastersclslist': minimastersclslist });
                                }
                            });
                            if (statuses == "Stopped Vehicles" || statuses == "Running Vehicles" || statuses == "Inside POI Vehicles" || statuses == "Outside POI Vehicles" || statuses == "MainPower Off Vehicles" || statuses == "Delay in Update Vehicles" || statuses == "Working Vehicles") {
                                $('#ddl_vehiclestatus').closest('.dropdownckecklist').find('li').each(function () {
                                    if ($(this).find('input').val() == statuses) {
                                    }
                                    else {
                                        $(this).find('input').prop('checked', false);
                                    }
                                });
                            }
                            statuses = "Vehicle Status";
                            $('#ddl_vehiclestatus').closest('.dropdownckecklist').find('li').each(function () {
                                if ($(this).find('input').prop('checked') == true) {
                                    statuses = $(this).find('input').val();
                                    checkedcnt++;
                                    return false;
                                }
                            });

                            if (minimasterfilterclslist.length == 0) {
                                for (var i = 0; i < allvehsdata.length; i++) {
                                    if (vehiclenos.indexOf(allvehsdata[i].idvehicle_properties) == -1) {
                                        if (statuses == "Vehicle Status") {
                                            vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                            vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                        }
                                        else if (statuses == "Stopped Vehicles") {
                                            for (var veh in livedata) {
                                                var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                if (isvehlive && allvehsdata[i].idvehicle_properties == livedata[veh].idvehicle_properties && livedata[veh].Speed == 0) {
                                                    vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                                    vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                                }
                                            }
                                        }
                                        else if (statuses == "Running Vehicles") {
                                            for (var veh in livedata) {
                                                var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                if (isvehlive && allvehsdata[i].idvehicle_properties == livedata[veh].idvehicle_properties && livedata[veh].Speed > 0) {
                                                    vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                                    vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                                }
                                            }
                                        }
                                        else if (statuses == "Inside POI Vehicles") {
                                            for (var veh in livedata) {
                                                var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                if (isvehlive && allvehsdata[i].idvehicle_properties == livedata[veh].idvehicle_properties) {
                                                    var Latitude = livedata[veh].latitude;
                                                    var Longitude = livedata[veh].longitude;
                                                    for (var cont = 0; cont < Locationsdata.length; cont++) {
                                                        var targetLoc = new google.maps.LatLng(Latitude, Longitude);
                                                        var center = new google.maps.LatLng(Locationsdata[cont].latitude, Locationsdata[cont].longitude);
                                                        var radius = Locationsdata[cont].Radious;
                                                        var isinside = pointInCircle(targetLoc, radius, center);
                                                        function pointInCircle(point, radius, center) {
                                                            return (google.maps.geometry.spherical.computeDistanceBetween(point, center) <= radius)
                                                        }
                                                        if (isinside) {
                                                            vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                                            vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else if (statuses == "Outside POI Vehicles") {
                                            var insidevehiclenos = [];
                                            for (var veh in livedata) {
                                                var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                if (isvehlive && allvehsdata[i].idvehicle_properties == livedata[veh].idvehicle_properties) {
                                                    var Latitude = livedata[veh].latitude;
                                                    var Longitude = livedata[veh].longitude;
                                                    for (var cont = 0; cont < Locationsdata.length; cont++) {
                                                        var targetLoc = new google.maps.LatLng(Latitude, Longitude);
                                                        var center = new google.maps.LatLng(Locationsdata[cont].latitude, Locationsdata[cont].longitude);
                                                        var radius = Locationsdata[cont].Radious;
                                                        var isinside = pointInCircle(targetLoc, radius, center);
                                                        function pointInCircle(point, radius, center) {
                                                            return (google.maps.geometry.spherical.computeDistanceBetween(point, center) <= radius)
                                                        }
                                                        if (isinside) {
                                                            insidevehiclenos.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                            for (var vehicleid in allvehsdata) {
                                                var existed = false;
                                                for (var veh in insidevehiclenos) {
                                                    if (allvehsdata[vehicleid].idvehicle_properties == insidevehiclenos[veh].idvehicle_properties) {
                                                        existed = true;
                                                        break;
                                                    }
                                                }
                                                if (!existed && vehiclenos.indexOf(allvehsdata[i].idvehicle_properties) == -1) {
                                                    existed = false;
                                                    vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                                    vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                                }
                                            }
                                        }
                                        else if (statuses == "MainPower Off Vehicles") {
                                            for (var veh in livedata) {
                                                var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                if (isvehlive && allvehsdata[i].idvehicle_properties == livedata[veh].idvehicle_properties && livedata[veh].mainpower == "OFF") {
                                                    vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                                    vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                                }
                                            }
                                        }
                                        else if (statuses == "Delay in Update Vehicles") {
                                            var vehisrgstrd = false;
                                            for (var veh in livedata) {
                                                var updatedata = livedata[veh].Datetime;
                                                var date = updatedata.split(" ")[0];
                                                var time = updatedata.split(" ")[1];
                                                var datevalues = new Array();
                                                var timevalues = new Array();
                                                datevalues = date.split('/');
                                                timevalues = time.split(':');
                                                var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
                                                var todaydate = new Date();
                                                var _MS_PER_DAY = 86400000;
                                                var _MS_PER_aaa = 3600000;
                                                var _MS_PER_sss = 60000;
                                                var _MS_PER_ddd = 1000;
                                                var days = Math.floor((todaydate - updatetime) / _MS_PER_DAY);
                                                var hours = Math.floor((todaydate - updatetime) / _MS_PER_aaa);
                                                if (hours > 24) {
                                                    hours = hours % 24;
                                                }
                                                var min = Math.floor((todaydate - updatetime) / _MS_PER_sss);
                                                if (min > 60) {
                                                    min = min % 60;
                                                }
                                                var sec = Math.floor((todaydate - updatetime) / _MS_PER_ddd);
                                                if (sec > 60) {
                                                    sec = sec % 60;
                                                }
                                                if (allvehsdata[i].idvehicle_properties == livedata[veh].idvehicle_properties) {
                                                    vehisrgstrd = true;
                                                    if (min > 30 || hours >= 1 || days >= 1) {
                                                        vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                                        vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                                    }
                                                }
                                            }
                                            if (!vehisrgstrd)
                                                vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                        }
                                        else if (statuses == "Working Vehicles") {
                                            var vehisrgstrd = false;
                                            for (var veh in livedata) {
                                                var updatedata = livedata[veh].Datetime;
                                                var date = updatedata.split(" ")[0];
                                                var time = updatedata.split(" ")[1];
                                                var datevalues = new Array();
                                                var timevalues = new Array();
                                                datevalues = date.split('/');
                                                timevalues = time.split(':');
                                                var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
                                                var todaydate = new Date();
                                                var _MS_PER_DAY = 86400000;
                                                var _MS_PER_aaa = 3600000;
                                                var _MS_PER_sss = 60000;
                                                var _MS_PER_ddd = 1000;
                                                var days = Math.floor((todaydate - updatetime) / _MS_PER_DAY);
                                                var hours = Math.floor((todaydate - updatetime) / _MS_PER_aaa);
                                                if (hours > 24) {
                                                    hours = hours % 24;
                                                }
                                                var min = Math.floor((todaydate - updatetime) / _MS_PER_sss);
                                                if (min > 60) {
                                                    min = min % 60;
                                                }
                                                var sec = Math.floor((todaydate - updatetime) / _MS_PER_ddd);
                                                if (sec > 60) {
                                                    sec = sec % 60;
                                                }
                                                if (allvehsdata[i].idvehicle_properties == livedata[veh].idvehicle_properties) {
                                                    vehisrgstrd = true;
                                                    if (min > 30 || hours >= 1 || days >= 1) {
                                                    }
                                                    else {
                                                        vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                                        vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                                    }
                                                }
                                            }
                                            if (!vehisrgstrd)
                                                vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                        }
                                        //vehiclenos.push(msg[i].idvehicle_properties);
                                        //vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag });
                                    }
                                }
                                $('#divAllvehicles').css('display', 'block');
                                $('#divAllvehicles').setTemplateURL('liveview2.htm');
                                $('#divAllvehicles').processTemplate(vehicletypes);
                                get_deviceconfig();
                                //iCheck for checkbox and radio inputs
                                $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                                    checkboxClass: 'icheckbox_minimal-blue',
                                    radioClass: 'iradio_minimal-blue'
                                });
                                $('#ckballveh').on('ifChanged', function (event) {
                                    onallcheck(this);
                                });
                                $('.ckblvvehscls').on('ifChanged', function (event) {
                                    var ckdval = $(this);
                                    oncheck(this, ckdval[0].id);
                                });
                                $($('#ckballveh')).iCheck('uncheck');
                            }
                            else {
                                $('#veh_loader').show();
                                var data = { 'op': 'get_vehicle_filters_data', 'minimasterfilterclslist': minimasterfilterclslist };
                                var s = function (msg) {
                                    if (msg) {
                                        for (var i = 0; i < msg.length; i++) {
                                            if (vehiclenos.indexOf(msg[i].idvehicle_properties) == -1) {
                                                if (statuses == "Vehicle Status") {
                                                    vehiclenos.push(msg[i].idvehicle_properties);
                                                    vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                }
                                                else if (statuses == "Stopped Vehicles") {
                                                    for (var veh in livedata) {
                                                        var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                        if (isvehlive && msg[i].idvehicle_properties == livedata[veh].idvehicle_properties && livedata[veh].Speed == 0) {
                                                            vehiclenos.push(msg[i].idvehicle_properties);
                                                            vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                        }
                                                    }
                                                }
                                                else if (statuses == "Running Vehicles") {
                                                    for (var veh in livedata) {
                                                        var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                        if (isvehlive && msg[i].idvehicle_properties == livedata[veh].idvehicle_properties && livedata[veh].Speed > 0) {
                                                            vehiclenos.push(msg[i].idvehicle_properties);
                                                            vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                        }
                                                    }
                                                }
                                                else if (statuses == "Inside POI Vehicles") {
                                                    for (var veh in livedata) {
                                                        var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                        if (isvehlive && msg[i].idvehicle_properties == livedata[veh].idvehicle_properties) {
                                                            var Latitude = livedata[veh].latitude;
                                                            var Longitude = livedata[veh].longitude;
                                                            for (var cont = 0; cont < Locationsdata.length; cont++) {
                                                                var targetLoc = new google.maps.LatLng(Latitude, Longitude);
                                                                var center = new google.maps.LatLng(Locationsdata[cont].latitude, Locationsdata[cont].longitude);
                                                                var radius = Locationsdata[cont].Radious;
                                                                var isinside = pointInCircle(targetLoc, radius, center);
                                                                function pointInCircle(point, radius, center) {
                                                                    return (google.maps.geometry.spherical.computeDistanceBetween(point, center) <= radius)
                                                                }
                                                                if (isinside) {
                                                                    vehiclenos.push(msg[i].idvehicle_properties);
                                                                    vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                else if (statuses == "Outside POI Vehicles") {
                                                    var insidevehiclenos = [];
                                                    for (var veh in livedata) {
                                                        var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                        if (isvehlive && msg[i].idvehicle_properties == livedata[veh].idvehicle_properties) {
                                                            var Latitude = livedata[veh].latitude;
                                                            var Longitude = livedata[veh].longitude;
                                                            for (var cont = 0; cont < Locationsdata.length; cont++) {
                                                                var targetLoc = new google.maps.LatLng(Latitude, Longitude);
                                                                var center = new google.maps.LatLng(Locationsdata[cont].latitude, Locationsdata[cont].longitude);
                                                                var radius = Locationsdata[cont].Radious;
                                                                var isinside = pointInCircle(targetLoc, radius, center);
                                                                function pointInCircle(point, radius, center) {
                                                                    return (google.maps.geometry.spherical.computeDistanceBetween(point, center) <= radius)
                                                                }
                                                                if (isinside) {
                                                                    insidevehiclenos.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                    }
                                                    for (var vehicleid in msg) {
                                                        var existed = false;
                                                        for (var veh in insidevehiclenos) {
                                                            if (msg[vehicleid].idvehicle_properties == insidevehiclenos[veh].idvehicle_properties) {
                                                                existed = true;
                                                                break;
                                                            }
                                                        }
                                                        if (!existed) {
                                                            existed = false;
                                                            vehiclenos.push(msg[i].idvehicle_properties);
                                                            vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                        }
                                                    }
                                                }
                                                else if (statuses == "MainPower Off Vehicles") {
                                                    for (var veh in livedata) {
                                                        var isvehlive = getvehicleupdatestatus(livedata, veh);
                                                        if (isvehlive && msg[i].idvehicle_properties == livedata[veh].idvehicle_properties && livedata[veh].mainpower == "OFF") {
                                                            vehiclenos.push(msg[i].idvehicle_properties);
                                                            vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                        }
                                                    }
                                                }
                                                else if (statuses == "Delay in Update Vehicles") {
                                                    var vehisrgstrd = false;
                                                    for (var veh in livedata) {
                                                        var updatedata = livedata[veh].Datetime;
                                                        var date = updatedata.split(" ")[0];
                                                        var time = updatedata.split(" ")[1];
                                                        var datevalues = new Array();
                                                        var timevalues = new Array();
                                                        datevalues = date.split('/');
                                                        timevalues = time.split(':');
                                                        var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
                                                        var todaydate = new Date();
                                                        var _MS_PER_DAY = 86400000;
                                                        var _MS_PER_aaa = 3600000;
                                                        var _MS_PER_sss = 60000;
                                                        var _MS_PER_ddd = 1000;
                                                        var days = Math.floor((todaydate - updatetime) / _MS_PER_DAY);
                                                        var hours = Math.floor((todaydate - updatetime) / _MS_PER_aaa);
                                                        if (hours > 24) {
                                                            hours = hours % 24;
                                                        }
                                                        var min = Math.floor((todaydate - updatetime) / _MS_PER_sss);
                                                        if (min > 60) {
                                                            min = min % 60;
                                                        }
                                                        var sec = Math.floor((todaydate - updatetime) / _MS_PER_ddd);
                                                        if (sec > 60) {
                                                            sec = sec % 60;
                                                        }
                                                        if (msg[i].idvehicle_properties == livedata[veh].idvehicle_properties) {
                                                            vehisrgstrd = true;
                                                            if (min > 30 || hours >= 1 || days >= 1) {
                                                                vehisrgstrd = true;
                                                                vehiclenos.push(msg[i].idvehicle_properties);
                                                                vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                            }
                                                        }
                                                    }
                                                    if (!vehisrgstrd)
                                                        vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                }
                                                else if (statuses == "Working Vehicles") {
                                                    var vehisrgstrd = false;
                                                    for (var veh in livedata) {
                                                        var updatedata = livedata[veh].Datetime;
                                                        var date = updatedata.split(" ")[0];
                                                        var time = updatedata.split(" ")[1];
                                                        var datevalues = new Array();
                                                        var timevalues = new Array();
                                                        datevalues = date.split('/');
                                                        timevalues = time.split(':');
                                                        var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
                                                        var todaydate = new Date();
                                                        var _MS_PER_DAY = 86400000;
                                                        var _MS_PER_aaa = 3600000;
                                                        var _MS_PER_sss = 60000;
                                                        var _MS_PER_ddd = 1000;
                                                        var days = Math.floor((todaydate - updatetime) / _MS_PER_DAY);
                                                        var hours = Math.floor((todaydate - updatetime) / _MS_PER_aaa);
                                                        if (hours > 24) {
                                                            hours = hours % 24;
                                                        }
                                                        var min = Math.floor((todaydate - updatetime) / _MS_PER_sss);
                                                        if (min > 60) {
                                                            min = min % 60;
                                                        }
                                                        var sec = Math.floor((todaydate - updatetime) / _MS_PER_ddd);
                                                        if (sec > 60) {
                                                            sec = sec % 60;
                                                        }
                                                        if (msg[i].idvehicle_properties == livedata[veh].idvehicle_properties) {
                                                            vehisrgstrd = true;
                                                            if (min > 30 || hours >= 1 || days >= 1) {
                                                            }
                                                            else {
                                                                vehisrgstrd = true;
                                                                vehiclenos.push(msg[i].idvehicle_properties);
                                                                vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                            }
                                                        }
                                                    }
                                                    if (!vehisrgstrd)
                                                        vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag, iddevice_type: msg[i].iddevice_type });
                                                }
                                                //vehiclenos.push(msg[i].idvehicle_properties);
                                                //vehicletypes.push({ idvehicle_properties: msg[i].idvehicle_properties, vehicleno: msg[i].vehicleno, vehicletype: msg[i].vehicletype, vehicletag: msg[i].vehicletag });
                                            }
                                        }
                                        $('#divAllvehicles').css('display', 'block');
                                        $('#divAllvehicles').setTemplateURL('liveview2.htm');
                                        $('#divAllvehicles').processTemplate(vehicletypes);
                                        get_deviceconfig();
                                        //iCheck for checkbox and radio inputs
                                        $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                                            checkboxClass: 'icheckbox_minimal-blue',
                                            radioClass: 'iradio_minimal-blue'
                                        });
                                        $('#ckballveh').on('ifChanged', function (event) {
                                            onallcheck(this);
                                        });
                                        $('.ckblvvehscls').on('ifChanged', function (event) {
                                            var ckdval = $(this);
                                            oncheck(this, ckdval[0].id);
                                        });
                                        $($('#ckballveh')).iCheck('uncheck');
                                        liveupdate();
                                    }
                                    $('#veh_loader').hide();
                                }
                                var e = function (x, h, e) {
                                    $('#veh_loader').hide();
                                };
                                CallHandlerUsingJson_POST(data, s, e);
                            }
                            if (checkedcnt > 0) {
                            }
                            else {
                                for (var i = 0; i < allvehsdata.length; i++) {
                                    if (vehiclenos.indexOf(allvehsdata[i].idvehicle_properties) == -1) {
                                        vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                        vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                                    }
                                }
                                $('#divAllvehicles').css('display', 'block');
                                $('#divAllvehicles').setTemplateURL('liveview2.htm');
                                $('#divAllvehicles').processTemplate(vehicletypes);
                                //get_deviceconfig();
                                //iCheck for checkbox and radio inputs
                                $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                                    checkboxClass: 'icheckbox_minimal-blue',
                                    radioClass: 'iradio_minimal-blue'
                                });
                                $('#ckballveh').on('ifChanged', function (event) {
                                    onallcheck(this);
                                });
                                $('.ckblvvehscls').on('ifChanged', function (event) {
                                    var ckdval = $(this);
                                    oncheck(this, ckdval[0].id);
                                });
                                $($('#ckballveh')).iCheck('uncheck');
                            }
                            document.getElementById('lblvehscount').innerHTML = vehiclenos.length;
                            checkedvehicles = [];
                            liveupdate();
                        });
                    }
                    else {
                        window.location = '../Dealer/Dealer_login.html';
                        //window.location = "login.html";
                    }
                }
                else {
                }
            };
            var e = function (x, h, e) {
            };
            callHandler(data, s, e);
        }

        function getvehicleupdatestatus(livedata, veh) {
            var updatedata = livedata[veh].Datetime;
            var date = updatedata.split(" ")[0];
            var time = updatedata.split(" ")[1];
            var datevalues = new Array();
            var timevalues = new Array();
            datevalues = date.split('/');
            timevalues = time.split(':');
            var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
            var todaydate = new Date();
            var _MS_PER_DAY = 86400000;
            var _MS_PER_aaa = 3600000;
            var _MS_PER_sss = 60000;
            var _MS_PER_ddd = 1000;
            var days = Math.floor((todaydate - updatetime) / _MS_PER_DAY);
            var hours = Math.floor((todaydate - updatetime) / _MS_PER_aaa);
            if (hours > 24) {
                hours = hours % 24;
            }
            var min = Math.floor((todaydate - updatetime) / _MS_PER_sss);
            if (min > 60) {
                min = min % 60;
            }
            var sec = Math.floor((todaydate - updatetime) / _MS_PER_ddd);
            if (sec > 60) {
                sec = sec % 60;
            }
            if (min > 30 || hours >= 1 || days >= 1) {
                return false;
            }
            else {
                return true;
            }
        }

        function CallHandlerUsingJson_POST(d, s, e) {
            d = JSON.stringify(d);
            d = encodeURIComponent(d);
            $.ajax({
                type: 'POST',
                url: 'Client.axd',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: d,
                async: true,
                cache: true,
                success: s,
                error: e
            });
        }
    </script>
    <script type="text/javascript">
        $(document).on('click', '.dropdown-menu', function (e) {
            e.stopPropagation();
        });

        function getCookie(cname) {
            var name = cname + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1);
                if (c.indexOf(name) == 0) {
                    return c.substring(name.length, c.length);
                }
            }
            return "";
        }
        function setCookie(cname, cvalue, exdays) {
            var d = new Date();
            d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
            var expires = "expires=" + d.toUTCString();
            document.cookie = cname + "=" + cvalue + "; " + expires;
        }
        $(function () {
            var user = getCookie("currentpage");
            if (user != "") {
                currentpage = user;
                redirectpage(currentpage);
            } else {
                setCookie("currentpage", currentpage, 1);
            }
            //$(window).unload(function () {
            //    document.cookie = "currentpage=;expires=Wed; 01 Jan 1970";
            //});
        });

    </script>
    <script type="text/javascript">
        var slctdmap = "Google Map";
        function btn_selectmap_click(mapslct) {
            if (mapslct.value == "Openstreet Map") {
                document.getElementById("googleMap").style.display = "none";
                document.getElementById("openstreetmap").style.display = "block";
                slctdmap = "Openstreet Map";
                $("#btn_selectmap").val("Google Map");
                showlocations = true;
                $('#locationsbtn').html("<b>Show Locations<b>");
                deleteLocationOverlaysOSM();
                intializemaps();
                liveupdate();
            }
            else {
                document.getElementById("openstreetmap").style.display = "none";
                document.getElementById("googleMap").style.display = "block";
                slctdmap = "Google Map";
                $("#btn_selectmap").val("Openstreet Map");
                $('#locationsbtn').html("<b>Show Locations<b>");
                deleteLocationOverlaysOSM();
                showlocations = true;
                intializemaps();
                liveupdate();
            }
        }
        var clusteredview = true;
        var showtags = false;
        function intializemaps() {
            if (slctdmap == "Openstreet Map") {
                var tiles = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                    maxZoom: 18,
                    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
                }),
                  latlng = L.latLng(17.497535, 78.408622);
                openstreetmap = L.map('openstreetmap', { zoomControl: false, center: latlng, zoom: 5, layers: [tiles] });
                L.control.zoom({
                    position: 'topright'
                }).addTo(openstreetmap);
                ClusterControl = function (theClusterFunction) {

                    var Clustercontrol = new (L.Control.extend({
                        options: { position: 'topright' },
                        onAdd: function (openstreetmap) {
                            ClustercontrolDiv = L.DomUtil.create('div', 'Cluster-button');
                            ClustercontrolDiv.id = 'clusteredbtn1';
                            L.DomEvent
                .addListener(ClustercontrolDiv, 'click', L.DomEvent.stopPropagation)
                .addListener(ClustercontrolDiv, 'click', L.DomEvent.preventDefault)
                .addListener(ClustercontrolDiv, 'click', this.ClusterFunction);

                            // Set CSS for the control border
                            var ClustercontrolUI = L.DomUtil.create('div', 'Cluster-button-border', ClustercontrolDiv);
                            ClustercontrolUI.title = 'Clustering';
                            ClustercontrolUI.style.backgroundColor = 'rgb(255, 255, 255)';
                            ClustercontrolUI.style.border = '1px solid rgb(113, 123, 135)';
                            ClustercontrolUI.style.cursor = 'pointer';
                            ClustercontrolUI.style.textAlign = 'center';
                            ClustercontrolUI.style.width = '120px';
                            ClustercontrolUI.style.height = '20px';
                            ClustercontrolUI.style.boxShadow = "rgba(0, 0, 0, 0.4) 0px 2px 4px";
                            ClustercontrolUI.style.marginRight = "170px";
                            ClustercontrolUI.style.marginTop = "-60px";
                            // Set CSS for the control interior
                            var ClustercontrolText = L.DomUtil.create('div', 'Cluster-button-interior', ClustercontrolUI);
                            ClustercontrolText.id = 'clusteredbtn';
                            ClustercontrolText.innerHTML = '<b>NonClustered View<b>';
                            ClustercontrolText.style.fontFamily = 'Arial,sans-serif';
                            ClustercontrolText.style.fontSize = '12px';
                            ClustercontrolText.style.paddingLeft = '4px';
                            ClustercontrolText.style.paddingRight = '4px';
                            ClustercontrolText.style.height = '20px';
                            ClustercontrolText.style.paddingTop = '1px';

                            return ClustercontrolDiv;
                        }
                    }));
                    Clustercontrol.ClusterFunction = theClusterFunction;
                    return Clustercontrol;
                };
                ClusterFunction = function () {
                    if (OSMClusterview == true) {
                        OSMClusterview = false;
                        update();
                        $('#clusteredbtn').html("<b>Clustered View<b>");
                    }
                    else {
                        OSMClusterview = true;
                        update();
                        $('#clusteredbtn').html("<b>NonClustered View<b>");
                    }
                };
                openstreetmap.addControl(ClusterControl(ClusterFunction));
                LocationsControl = function (theLocationsFunction) {

                    var control = new (L.Control.extend({
                        options: { position: 'topright' },
                        onAdd: function (openstreetmap) {
                            controlDiv = L.DomUtil.create('div', 'Locations-button');
                            controlDiv.id = 'locationsbtn1';
                            L.DomEvent
                .addListener(controlDiv, 'click', L.DomEvent.stopPropagation)
                .addListener(controlDiv, 'click', L.DomEvent.preventDefault)
                .addListener(controlDiv, 'click', this.LocationsFunction);

                            // Set CSS for the control border
                            var controlUI = L.DomUtil.create('div', 'Locations-button-border', controlDiv);
                            controlUI.title = 'Locations';
                            controlUI.style.backgroundColor = 'rgb(255, 255, 255)';
                            controlUI.style.border = '1px solid rgb(113, 123, 135)';
                            controlUI.style.cursor = 'pointer';
                            controlUI.style.textAlign = 'center';
                            controlUI.style.width = '110px';
                            controlUI.style.height = '20px';
                            controlUI.style.boxShadow = "rgba(0, 0, 0, 0.4) 0px 2px 4px";
                            controlUI.style.marginRight = "50px";
                            controlUI.style.marginTop = "-70px";
                            // Set CSS for the control interior
                            var controlText = L.DomUtil.create('div', 'Locations-button-interior', controlUI);
                            controlText.id = 'locationsbtn';
                            controlText.innerHTML = '<b>Show Locations<b>';
                            controlText.style.fontFamily = 'Arial,sans-serif';
                            controlText.style.fontSize = '12px';
                            controlText.style.paddingLeft = '4px';
                            controlText.style.paddingRight = '4px';
                            controlText.style.height = '20px';
                            controlText.style.paddingTop = '1px';

                            return controlDiv;
                        }
                    }));
                    control.LocationsFunction = theLocationsFunction;
                    return control;
                };
                LocationsFunction = function () { locationsfnctn(this); };
                openstreetmap.addControl(LocationsControl(LocationsFunction));
                var custom_geocoding_provider = function (arg) {
                    var that = this
                , query = arg.query
                , cb = arg.cb;

                    $.ajax({
                        url: 'http://nominatim.openstreetmap.org/search'
                , dataType: 'jsonp'
                , jsonp: 'json_callback'
                , data: {
                    'q': query
                    , 'format': 'json'
                }
                    })
            .done(function (data) {
                if (data.length > 0) {
                    var res = data[0];
                    cb({
                        query: query
                        , content: res.display_name
                        , latlng: new L.LatLng(res.lat, res.lon)
                        , bounds: new L.LatLngBounds([res.boundingbox[0], res.boundingbox[2]], [res.boundingbox[1], res.boundingbox[3]])
                    });
                }
            });
                }
                geocoding = new L.Geocoding({
                    apikeys: {
                        'bing': 'Anqm0F_JjIZvT0P3abS6KONpaBaKuTnITRrnYuiJCE0WOhH6ZbE4DzeT6brvKVR5'
              , 'mapquest': 'Kmjtd%7Cluua2qu7n9%2C7a%3Do5-lzbgq'
              , 'nokia': 'HGHGJHgdbndbmbsdf7675wefdvvdsnb'
                    }
            , providers: {
                'custom': custom_geocoding_provider
            }
                });
                openstreetmap.addControl(geocoding);
            }
            else {
                var myCenter = new google.maps.LatLng(17.497535, 78.408622);
                // Add a Home control that returns the user to London
                function HomeControl(controlDiv, googlemap) {
                    controlDiv.style.padding = '5px 1px 0px 0px';
                    var controlUI = document.createElement('div');
                    controlUI.style.backgroundColor = '#607D8B';
                    controlUI.style.color = '#ffffff';
                    controlUI.style.cursor = 'pointer';
                    controlUI.style.textAlign = 'center';
                    controlUI.style.width = '120px';
                    controlUI.title = 'NonClustered View';
                    controlUI.style.boxShadow = "#607D8B 0px 1px 1px";
                    controlUI.style.borderRadius = '.25em';
                    controlDiv.appendChild(controlUI);
                    var controlText = document.createElement('div');
                    controlText.style.fontFamily = 'Arial,sans-serif';
                    controlText.style.fontSize = '12px';
                    controlText.style.paddingLeft = '4px';
                    controlText.style.paddingRight = '4px';
                    controlText.style.height = '20px';
                    controlText.style.paddingTop = '3px';
                    controlText.innerHTML = '<b>NonClustered View<b>'
                    controlUI.appendChild(controlText);

                    // Setup click-event listener: simply set the googlemap to London
                    google.maps.event.addDomListener(controlUI, 'click', function () {
                        if (clusteredview) {
                            clusteredview = false;
                            update();
                            closeinfowindow();
                            controlText.innerHTML = '<b>Clustered View<b>'
                            controlUI.title = 'Clustered View';
                        }
                        else {
                            clusteredview = true;
                            controlUI.title = 'NonClustered View';
                            controlText.innerHTML = '<b>NonClustered View<b>'
                            closeinfowindow();
                            update();
                        }
                    });
                }

                function TagsControl(TagcontrolDiv, googlemap) {
                    TagcontrolDiv.style.padding = '5px 1px 0px 0px';
                    var TagcontrolUI = document.createElement('div');
                    TagcontrolUI.style.backgroundColor = '#607D8B';
                    TagcontrolUI.style.color = '#ffffff';
                    TagcontrolUI.style.cursor = 'pointer';
                    TagcontrolUI.style.textAlign = 'center';
                    TagcontrolUI.style.width = '80px';
                    TagcontrolUI.title = 'Show Tags';
                    TagcontrolUI.style.boxShadow = "#607D8B 0px 1px 1px";
                    TagcontrolUI.style.borderRadius = '.25em';
                    TagcontrolDiv.appendChild(TagcontrolUI);
                    var TagcontrolText = document.createElement('div');
                    TagcontrolText.style.fontFamily = 'Arial,sans-serif';
                    TagcontrolText.style.fontSize = '12px';
                    TagcontrolText.style.paddingLeft = '4px';
                    TagcontrolText.style.paddingRight = '4px';
                    TagcontrolText.style.height = '20px';
                    TagcontrolText.style.paddingTop = '3px';
                    TagcontrolText.innerHTML = '<b>Show Tags<b>'
                    TagcontrolUI.appendChild(TagcontrolText);

                    // Setup click-event listener: simply set the googlemap to London
                    google.maps.event.addDomListener(TagcontrolUI, 'click', function () {
                        if (showtags) {
                            for (var i = infowindows.length - 1; i >= 0; i--) {
                                infowindows[i].close();
                                infowindows.splice(i, 1);
                            }
                            showtags = false;
                            TagcontrolUI.title = 'Show Tags';
                            TagcontrolText.innerHTML = '<b>Show Tags<b>'
                        }
                        else {
                            update();
                            showtags = true;
                            TagcontrolText.innerHTML = '<b>Hide Tags<b>'
                            TagcontrolUI.title = 'Hide Tags';
                        }
                    });
                }

                // Add a Locations control that returns the user to London
                function LocationsControl(locationcontrolDiv, googlemap) {
                    locationcontrolDiv.style.padding = '5px 1px 0px 0px';
                    var locationcontrolUI = document.createElement('div');
                    locationcontrolUI.style.backgroundColor = '#607D8B';
                    locationcontrolUI.style.color = '#ffffff';
                    locationcontrolUI.style.cursor = 'pointer';
                    locationcontrolUI.style.textAlign = 'center';
                    locationcontrolUI.style.width = '110px';
                    locationcontrolUI.title = 'Show Locations';
                    locationcontrolUI.style.boxShadow = "#607D8B 0px 1px 1px";
                    locationcontrolUI.style.borderRadius = '.25em';
                    locationcontrolDiv.appendChild(locationcontrolUI);
                    var locationcontrolText = document.createElement('div');
                    locationcontrolText.style.fontFamily = 'Arial,sans-serif';
                    locationcontrolText.style.fontSize = '12px';
                    locationcontrolText.style.paddingLeft = '4px';
                    locationcontrolText.style.paddingRight = '4px';
                    locationcontrolText.style.height = '20px';
                    locationcontrolText.style.paddingTop = '3px';
                    locationcontrolText.innerHTML = '<b>Show Locations<b>'
                    locationcontrolUI.appendChild(locationcontrolText);

                    // Setup click-event listener: simply set the map to London
                    google.maps.event.addDomListener(locationcontrolUI, 'click', function () {
                        if (showlocations) {
                            showlocations = false;
                            locationcontrolText.innerHTML = '<b>Hide Locations<b>'
                            locationcontrolUI.title = "Hide Locations";
                            if (Locationsdata.length > 0) {
                                for (var vehicledata in Locationsdata) {
                                    var myCenter;
                                    if (slctdmap == "Openstreet Map") {
                                        myCenter = [[Locationsdata[vehicledata].latitude, Locationsdata[vehicledata].longitude]];
                                    }
                                    else {
                                        myCenter = new google.maps.LatLng(Locationsdata[vehicledata].latitude, Locationsdata[vehicledata].longitude);
                                    }
                                    placeMarkerlocations(myCenter, Locationsdata[vehicledata].locacationname, Locationsdata[vehicledata].Image, Locationsdata[vehicledata].Description);
                                }
                                $(this).val("Hide Locations");
                            }
                            else {
                                var data = { 'op': 'get_locations' };
                                var s = function (msg) {
                                    if (msg) {
                                        Bindlocations(msg);
                                    }
                                    else {
                                    }
                                };
                                var e = function (x, h, e) {
                                    // $('#BookingDetails').html(x);
                                };
                                callHandler(data, s, e);
                                $(this).val("Hide Locations");
                            }
                            function Bindlocations(data) {
                                Locationsdata = data;
                                for (var vehicledata in data) {
                                    var myCenter;
                                    if (slctdmap == "Openstreet Map") {
                                        myCenter = [[data[vehicledata].latitude, data[vehicledata].longitude]];
                                    }
                                    else {
                                        myCenter = new google.maps.LatLng(data[vehicledata].latitude, data[vehicledata].longitude);
                                    }
                                    placeMarkerlocations(myCenter, data[vehicledata].locacationname, data[vehicledata].Image, data[vehicledata].Description);
                                }
                            }
                        }
                        else {
                            showlocations = true;
                            locationcontrolText.innerHTML = '<b>Show Locations<b>'
                            locationcontrolUI.title = "Show Locations";
                            deletelocationOverlays();
                        }
                    });
                }

                // Add a range slider control 
                function RangesliderControl(rangesliderDiv, googlemap) {
                    rangesliderDiv.style.padding = '10px 5px 0px 0px';
                    var rangesliderUI = document.createElement('div');
                    rangesliderUI.style.cursor = 'pointer';
                    rangesliderUI.style.textAlign = 'center';
                    rangesliderUI.style.width = '200px';
                    rangesliderDiv.appendChild(rangesliderUI);
                    var SubrangesliderUI = document.createElement('input');
                    SubrangesliderUI.setAttribute('id', 'range_stpdtime');
                    SubrangesliderUI.setAttribute('type', 'range');
                    SubrangesliderUI.setAttribute('min', '0');
                    SubrangesliderUI.setAttribute('max', '300');
                    SubrangesliderUI.setAttribute('step', '10');
                    SubrangesliderUI.setAttribute('value', '0');
                    SubrangesliderUI.setAttribute('data-rangeslider', '');
                    SubrangesliderUI.style.width = '210px';
                    SubrangesliderUI.style.height = '20px';
                    rangesliderUI.appendChild(SubrangesliderUI);
                }

                // Add a range count for slider control 
                function RangeCountControl(RangeCountDiv, googlemap) {
                    RangeCountDiv.style.padding = '5px 5px 0px 0px';
                    var RangeCountUI = document.createElement('div');
                    RangeCountUI.style.cursor = 'pointer';
                    RangeCountUI.style.textAlign = 'center';
                    RangeCountUI.style.backgroundColor = '#607D8B';
                    RangeCountUI.style.height = '20px';
                    RangeCountUI.style.boxShadow = "#607D8B 0px 1px 1px";
                    RangeCountUI.style.padding = '0px 6px 0px 6px';
                    RangeCountUI.style.borderRadius = '.25em';
                    RangeCountDiv.appendChild(RangeCountUI);
                    var RangeCountText = document.createElement('div');
                    RangeCountText.setAttribute('id', 'lbl_range_count');
                    RangeCountText.style.fontFamily = 'Arial,sans-serif';
                    RangeCountText.style.fontSize = '12px';
                    RangeCountText.style.fontWeight = 'bold';
                    RangeCountText.style.color = '#FFEB3B';
                    RangeCountText.style.float = 'left';
                    RangeCountText.style.paddingRight = '5px';
                    RangeCountText.style.marginTop = '3px';
                    RangeCountText.innerHTML = '0';
                    RangeCountUI.appendChild(RangeCountText);
                    var RangeCountText = document.createElement('div');
                    RangeCountText.style.fontFamily = 'Arial,sans-serif';
                    RangeCountText.style.fontSize = '12px';
                    RangeCountText.style.fontWeight = 'bold';
                    RangeCountText.style.color = '#ffeb3b';
                    RangeCountText.style.float = 'right';
                    RangeCountText.style.marginTop = '3px';
                    RangeCountText.innerHTML = 'Min';
                    RangeCountUI.appendChild(RangeCountText);
                }

                function initialize() {
                    var mapProp = {
                        center: myCenter,
                        zoom: 5,
                        panControl: true,
                        panControlOptions: {
                            position: google.maps.ControlPosition.RIGHT_TOP
                        },
                        zoomControl: true,
                        zoomControlOptions: {
                            style: google.maps.ZoomControlStyle.LARGE,
                            position: google.maps.ControlPosition.RIGHT_TOP
                        },
                        mapTypeControlOptions: {
                            style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                            position: google.maps.ControlPosition.RIGHT_BOTTOM
                        },
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    };

                    googlemap = new google.maps.Map(document.getElementById("googleMap"), mapProp);
                    markerClusterer = new MarkerClusterer(googlemap);

                    var homeControlDiv = document.createElement('div');
                    var homeControl = new HomeControl(homeControlDiv, googlemap);
                    googlemap.controls[google.maps.ControlPosition.TOP_RIGHT].push(homeControlDiv);

                    var TagsControlDiv = document.createElement('div');
                    var tagscontrol = new TagsControl(TagsControlDiv, googlemap);
                    googlemap.controls[google.maps.ControlPosition.TOP_RIGHT].push(TagsControlDiv);

                    var locationControlDiv = document.createElement('div');
                    var locationControl = new LocationsControl(locationControlDiv, googlemap);
                    googlemap.controls[google.maps.ControlPosition.TOP_RIGHT].push(locationControlDiv);

                    var RangesliderControlDiv = document.createElement('div');
                    var rangeslidercontrol = new RangesliderControl(RangesliderControlDiv, googlemap);
                    googlemap.controls[google.maps.ControlPosition.TOP_RIGHT].push(RangesliderControlDiv);

                    var RangeCountTextControlDiv = document.createElement('div');
                    var rangeslidercontrol = new RangeCountControl(RangeCountTextControlDiv, googlemap);
                    googlemap.controls[google.maps.ControlPosition.TOP_RIGHT].push(RangeCountTextControlDiv);
                }
                initialize();
                setTimeout(function () {
                    load_slidebar();
                }, 1000);
            }
        }
        // Deletes all markers in the array by removing references to them.
        function deleteOverlays() {
            clearOverlays();
            closeinfowindow();
            markersArray = [];
            if (typeof markerClusterer === "undefined") {
            }
            else {
                markerClusterer.clearMarkers();
            }
        }

        // Sets the map on all markers in the array.
        function setAllMap(googlemap) {
            for (var i = 0; i < markersArray.length; i++) {
                markersArray[i].setMap(googlemap);
            }
        }

        // Removes the overlays from the map, but keeps them in the array.
        function clearOverlays() {
            setAllMap(null);
        }

        // Deletes all markers in the array by removing references to them.
        function deletelocationOverlays() {
            locationclearOverlays();
            GMLocationsArray = [];
        }

        // Sets the map on all markers in the array.
        function locationsetAllMap(googlemap) {
            for (var i = 0; i < GMLocationsArray.length; i++) {
                GMLocationsArray[i].setMap(googlemap);
            }
        }

        // Removes the overlays from the map, but keeps them in the array.
        function locationclearOverlays() {
            locationsetAllMap(null);
        }
        var googlemap;
        var openstreetmap;
        var markersArray = new Array();
        var markersArrayOSM = new Array();
        var showlocations = true;
        var Locationsdata = new Array();
        var infoWindow = new google.maps.InfoWindow();
        var geocoding;
        var OSMClusteredMarkers = L.markerClusterGroup();
        var OSMClusterview = true;
        $(function () {
            $(".main-header").css('display', 'block');
            btn_selectmap_click($('#btn_selectmap'));

        });

        function locationsfnctn(thisid) {
            deleteLocationOverlaysOSM();
            if (showlocations) {
                showlocations = false;
                $('#' + thisid.id + '').find('#locationsbtn').html("<b>Hide Locations<b>");
                if (Locationsdata.length > 0) {
                    for (var vehicledata in Locationsdata) {
                        var myCenter;
                        if (slctdmap == "Openstreet Map") {
                            myCenter = [[Locationsdata[vehicledata].latitude, Locationsdata[vehicledata].longitude]];
                        }
                        else {
                            myCenter = new google.maps.LatLng(Locationsdata[vehicledata].latitude, Locationsdata[vehicledata].longitude);
                        }
                        placeMarkerlocations(myCenter, Locationsdata[vehicledata].locacationname, Locationsdata[vehicledata].Image, Locationsdata[vehicledata].Description);
                    }
                }
                else {
                    var data = { 'op': 'get_locations' };
                    var s = function (msg) {
                        if (msg) {
                            Bindlocations(msg);
                        }
                        else {
                        }
                    };
                    var e = function (x, h, e) {
                        // $('#BookingDetails').html(x);
                    };
                    callHandler(data, s, e);
                }
                function Bindlocations(data) {
                    Locationsdata = data;
                    for (var vehicledata in data) {
                        if (slctdmap == "Openstreet Map") {
                            myCenter = [[data[vehicledata].latitude, data[vehicledata].longitude]];
                        }
                        else {
                            myCenter = new google.maps.LatLng(data[vehicledata].latitude, data[vehicledata].longitude);
                        }
                        placeMarkerlocations(myCenter, data[vehicledata].locacationname, data[vehicledata].Image, data[vehicledata].Description);
                    }
                }
            }
            else {
                showlocations = true;
                $('#' + thisid.id + '').find('#locationsbtn').html("<b>Show Locations<b>");
            }
        }
        var GMLocationsArray = new Array();
        var OSMLocationsArray = new Array();
        function placeMarkerlocations(location, locacationname, Image, Description) {
            if (slctdmap == "Openstreet Map") {
                var content = "Location : " + locacationname + "<br/>" + "Description : " + Description;
                var Locationmarker = new L.marker([location[0][0], location[0][1]])
                .bindPopup(content)
                .addTo(openstreetmap);
                OSMLocationsArray.push(Locationmarker);
            }
            else {
                var marker = new google.maps.Marker({
                    position: location,
                    map: googlemap,
                    center: location,
                    zoom: 7,
                    title: locacationname,
                    icon: 'UserImgs/' + Image + '.png'
                });
                GMLocationsArray.push(marker);

                var content = "Location : " + locacationname + "<br/>" + "Description : " + Description;
                var infowindow = new google.maps.InfoWindow({
                    content: content
                });

                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(googlemap, marker);
                });
            }
        }
        function deleteOverlaysOSM() {
            for (i = 0; i < markersArrayOSM.length; i++) {
                openstreetmap.removeLayer(markersArrayOSM[i]);
            }
            markersArrayOSM = [];
            OSMClusteredMarkers.clearLayers();
            OSMClusteredMarkers = null;
            OSMClusteredMarkers = L.markerClusterGroup();
        }
        function deleteLocationOverlaysOSM() {
            for (i = 0; i < OSMLocationsArray.length; i++) {
                openstreetmap.removeLayer(OSMLocationsArray[i]);
            }
            OSMLocationsArray = [];
        }
        function popupClear() {
            while (openstreetmap.popups.length) {
                openstreetmap.removePopup(openstreetmap.popups[0]);
            }
        }
    </script>
    <script type="text/javascript">
        $(function () {
            var myVar = setInterval(function () { liveupdate() }, 20000);
        });
    </script>
    <script type="text/javascript">
        var ServerDate;
        $(function () {
            $('#veh_loader').show();
            var data = { 'op': 'InitilizeVehicles' };
            var s = function (msg) {
                if (msg) {
                    if (msg == "Error login") {
                        $('#veh_loader').hide();
                        window.location = '../Dealer/Dealer_login.html';
                        //window.location = "login.html";
                    }
                    else {
                        $('#veh_loader').hide();
                        getalerts();
                        BindResults(msg);
                    }
                }
                else {
                    $('#veh_loader').hide();
                }
            };
            var e = function (x, h, e) {
                $('#veh_loader').hide();
            };
            callHandler(data, s, e);
        });

        function load_slidebar() {
            // Basic rangeslider initialization
            $('#range_stpdtime').rangeslider({
                // Deactivate the feature detection
                polyfill: false,
                // Callback function
                onInit: function () {
                },
                // Callback function
                onSlide: function (position, value) {
                    //alert('position: ' + position, 'value: ' + value);
                },
                // Callback function
                onSlideEnd: function (position, value) {
                    if (parseInt(value) > 0)
                        showstoppedvehicles_onmap();
                    else
                        clear_filters_click();
                    //alert('position: ' + position, 'value: ' + value);
                }
            });
            $(document).on('input', '#range_stpdtime', function (e) {
                valueOutput(e.target);
            });

            // Example functionality to demonstrate a value feedback
            function valueOutput(element) {
                var value = parseInt(element.value);
                if (value > 60) {
                    var hours = Math.floor(value / 60);
                    var minutes = value % 60;
                    $('.convertedHour').html(hours);
                    $('.convertedMin').html(minutes);
                    $('#lbl_range_count').text(hours + 'H ' + minutes);
                }
                else {
                    $('#lbl_range_count').text(value);
                }
                $('#lbl_range_count').attr('title', value);
            }
        }

        function showstoppedvehicles_onmap()
        {
            var lbl_range_count = $('#lbl_range_count').attr('title');
            vehicletypes = [];
            vehiclenos = [];
            for (var i = 0; i < allvehsdata.length; i++) {
                for (var veh in livedata) {
                    var isvehlive = getvehicleupdatestatus(livedata, veh);
                    if (isvehlive && allvehsdata[i].idvehicle_properties == livedata[veh].idvehicle_properties && livedata[veh].Speed == 0 && livedata[veh].stoppedfor != "") {
                        var stoppeddate = livedata[veh].stoppedfor;
                        try {
                            var updatedata = livedata[veh].Datetime;
                            var date = updatedata.split(" ")[0];
                            var time = updatedata.split(" ")[1];
                            var datevalues = new Array();
                            var timevalues = new Array();
                            datevalues = date.split('/');
                            timevalues = time.split(':');
                            var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);

                            var stpddate = stoppeddate.split(" ")[0];
                            var stpdtime = stoppeddate.split(" ")[1];
                            var stpddatevalues = new Array();
                            var stpdtimevalues = new Array();
                            stpddatevalues = stpddate.split('/');
                            stpdtimevalues = stpdtime.split(':');
                            var stpdupdatetime = new Date(stpddatevalues[2], stpddatevalues[1] - 1, stpddatevalues[0], stpdtimevalues[0], stpdtimevalues[1], stpdtimevalues[2]);
                            var _MS_PER_DAY = 86400000;
                            var _MS_PER_aaa = 3600000;
                            var _MS_PER_sss = 60000;
                            var _MS_PER_ddd = 1000;
                            var days = Math.floor((updatetime - stpdupdatetime) / _MS_PER_DAY);
                            var hours = Math.floor((updatetime - stpdupdatetime) / _MS_PER_aaa);
                            var min = Math.floor((updatetime - stpdupdatetime) / _MS_PER_sss);
                            if (min >= parseInt(lbl_range_count)) {
                                vehiclenos.push(allvehsdata[i].idvehicle_properties);
                                vehicletypes.push({ idvehicle_properties: allvehsdata[i].idvehicle_properties, vehicleno: allvehsdata[i].vehicleno, vehicletype: allvehsdata[i].vehicletype, vehicletag: allvehsdata[i].vehicletag, iddevice_type: allvehsdata[i].iddevice_type });
                            }
                        }
                        catch (Error) {
                        }
                    }
                }
            }
            $('#divAllvehicles').css('display', 'block');
            $('#divAllvehicles').setTemplateURL('liveview2.htm');
            $('#divAllvehicles').processTemplate(vehicletypes);
            get_deviceconfig();
            //iCheck for checkbox and radio inputs
            $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                checkboxClass: 'icheckbox_minimal-blue',
                radioClass: 'iradio_minimal-blue'
            });
            $('#ckballveh').on('ifChanged', function (event) {
                onallcheck(this);
            });
            $('.ckblvvehscls').on('ifChanged', function (event) {
                var ckdval = $(this);
                oncheck(this, ckdval[0].id);
            });
            $($('#ckballveh')).iCheck('uncheck');
            $($('#ckballveh')).iCheck('check');
            document.getElementById('lblvehscount').innerHTML = vehiclenos.length;
            liveupdate();
        }

        var deviceconfigdata = null;
        function get_deviceconfig() {
            if (deviceconfigdata == null) {
                var data = { 'op': 'get_deviceconfig' };
                var s = function (msg) {
                    if (msg) {
                        if (msg != "Error") {
                            deviceconfigdata = msg;
                            for (var i = 0; i < msg.length; i++) {
                                if (msg[i].specification_name != "") {
                                    var inptype = msg[i].specification_type.substring(0, msg[i].specification_type.length - 1);
                                    if (inptype == 'inp') {
                                        $('.tr_VehiclesTable').each(function () {
                                            if ($(this).find('td:first-child').attr('title') == msg[i].iddevice_type) {
                                                $(this).append("<td style='width: 20px;padding: 4px;'><img id='" + msg[i].specification_type + "' src='LiveIcons/" + msg[i].input_off_img + ".png' /></td>");
                                            }
                                        });
                                    }
                                }
                            }
                        }
                        else {
                        }
                    }
                    else {
                    }
                };
                var e = function (x, h, e) {
                };
                callHandler(data, s, e);
            }
            else
            {
                for (var i = 0; i < deviceconfigdata.length; i++) {
                    if (deviceconfigdata[i].specification_name != "") {
                        var inptype = deviceconfigdata[i].specification_type.substring(0, deviceconfigdata[i].specification_type.length - 1);
                        if (inptype == 'inp') {
                            $('.tr_VehiclesTable').each(function () {
                                if ($(this).find('td:first-child').attr('title') == deviceconfigdata[i].iddevice_type) {
                                    $(this).append("<td style='width: 20px;padding: 4px;'><img id='" + deviceconfigdata[i].specification_type + "' src='LiveIcons/" + deviceconfigdata[i].input_off_img + ".png' /></td>");
                                }
                            });
                        }
                    }
                }
            }
        }

        var allalerts;
        var vehiclealertcount = [];
        function getalerts() {
            var data = { 'op': 'getalerts' };
            var s = function (msg) {
                if (msg) {
                    allalerts = msg;
                    document.getElementById('icon_alertcount').innerHTML = msg.length;
                    document.getElementById('icon_alertcount1').innerHTML = msg.length;
                    $('#ul_alerts').html('');
                    var distvehs = [];
                    for (var i = 0; i < msg.length; i++) {
                        if (distvehs.indexOf(msg[i].Vehicleno) == -1) {
                            distvehs.push(msg[i].Vehicleno);
                            //$('#ul_alerts').append('<li><a style="cursor:pointer;"><h4 style="margin:0px;"><span>' + (i + 1) + ' : ' + msg[i].Vehicleno + ' - ' + msg[i].alerttype + '</span></h4><p style="margin:0px;"><i class="fa fa-clock-o"></i> ' + msg[i].alertinfo + '</p></a></li>');
                        }
                    }
                    for (var v = 0; v < distvehs.length; v++) {
                        var cnt = 0;
                        var alertlogs = '<ul class="menu" style="padding-left: 10px;background-color: #fff;display:none;">';
                        for (var i = 0; i < msg.length; i++) {
                            if (distvehs[v] == msg[i].Vehicleno) {
                                alertlogs += '<li><a style="cursor:pointer;"><p style="margin:0px;"><i class="fa fa-clock-o"></i> ' + allalerts[i].alertinfo + '</p></a></li>';
                                cnt++;
                            }
                        }
                        alertlogs += '</ul>';
                        vehiclealertcount.push({ 'vehicle': distvehs[v], 'count': cnt, 'alerthtml': alertlogs });
                    }
                    for (var ac = 0; ac < vehiclealertcount.length; ac++) {
                        $('#ul_alerts').append('<li><a style="cursor:pointer;"><h4 style="margin:0px;"><span>' + (ac + 1) + ' : ' + '<span class="alertvehcls">' + vehiclealertcount[ac].vehicle + '</span></span><span class="label label-success" onclick="togglevehalerts(this);" style="float:right;">' + vehiclealertcount[ac].count + '<span class="caret"></span></span></h4></a>' + vehiclealertcount[ac].alerthtml + '</li>');
                    }
                }
                else {
                }
            };
            var e = function (x, h, e) {
                $('#veh_loader').hide();
            };
            callHandler(data, s, e);
        }

        function togglevehalerts(clickedveh) {
            $(clickedveh).find('span').toggleClass('caret revcaret')
            //var vehiclecls = $(clickedveh).find('span').attr('class');
            //if (vehiclecls == 'caret') {
            //}
            //else {
            //    $(clickedveh).find('span').attr('class') = 'caret';
            //}
            $(clickedveh).closest('li').find('ul').slideToggle();
            //var vehicle = $(clickedveh).closest('li').find('.alertvehcls').html();
            //var alertlogs = '<ul class="menu" style="padding-left: 10px;background-color: aliceblue;">';
            //for (var i = 0; i < allalerts.length; i++) {
            //    if (allalerts[i].Vehicleno == vehicle) {
            //        alertlogs += '<li><a style="cursor:pointer;"><p style="margin:0px;"><i class="fa fa-clock-o"></i> ' + allalerts[i].alertinfo + '</p></a></li>';
            //    }
            //}
            //alertlogs += '</ul>';
            //$(vehiclediv).append(alertlogs);
        }

        function callHandler(d, s, e) {
            $.ajax({
                url: 'Client.axd',
                data: d,
                type: 'GET',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                async: true,
                cache: true,
                success: s,
                error: e
            });
        }

        var vehiclenos = [];
        var vehicletypes = [];
        var distinctvehs = [];
        var allvehsdata = [];
        function BindResults(data) {
            distinctvehs = [];
            allvehsdata = data;
            for (var i = 0; i < data.length; i++) {
                if (vehiclenos.indexOf(data[i].idvehicle_properties) == -1) {
                    vehiclenos.push(data[i].idvehicle_properties);
                    vehicletypes.push({ idvehicle_properties: data[i].idvehicle_properties, vehicleno: data[i].vehicleno, vehicletype: data[i].vehicletype, vehicletag: data[i].vehicletag, iddevice_type: data[i].iddevice_type });
                }
            }
            $('#divAllvehicles').css('display', 'block');
            $('#divAllvehicles').setTemplateURL('liveview2.htm');
            $('#divAllvehicles').processTemplate(vehicletypes);
            get_deviceconfig();
            $('#ul_showallvehs').html('');
            for (var i = 0; i < vehicletypes.length; i++) {
                $('#ul_showallvehs').append('<li><a style="cursor:pointer;"><div class="pull-left"><i class="fa fa-taxi"></i></div><h4><span>' + data[i].vehicleno + '</span></h4></a></li>');
            }
            //iCheck for checkbox and radio inputs
            $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                checkboxClass: 'icheckbox_minimal-blue',
                radioClass: 'iradio_minimal-blue'
            });
            $('#ckballveh').on('ifChanged', function (event) {
                onallcheck(this);
            });
            $('.ckblvvehscls').on('ifChanged', function (event) {
                var ckdval = $(this);
                oncheck(this, ckdval[0].id);
            });
            $($('#ckballveh')).iCheck('uncheck');

            //var vehkeys = Object.keys(vehiclesdata);
            //vehkeys.forEach(function (veh) {
            //    vehiclenos.push({ vehicleno: vehiclesdata[veh].vehicleno });
            //});
            //$('#divAllvehicles').css('display', 'block');
            //$.getScript("js/JTemplate.js", function (data, textStatus, jqxhr) {
            //    $('#divAllvehicles').setTemplateURL('liveview2.htm');
            //    $('#divAllvehicles').processTemplate(vehiclenos);
            //    liveupdate();
            //    if (slctdmap == "Openstreet Map") {
            //        deleteOverlaysOSM();
            //    }
            //    else {
            //        deleteOverlays();
            //    }
            //    checkedvehicles = [];
            //    document.getElementById('lblvehscount').innerHTML = vehiclenos.length;
            //});
            document.getElementById('lblvehscount').innerHTML = vehiclenos.length;
            liveupdate();
        }

        function liveupdate() {
            var data = { 'op': 'LiveUpdate' };
            var s = function (msg) {
                if (msg) {
                    var date = msg.ServerDt.split(" ")[0];
                    var time = msg.ServerDt.split(" ")[1];
                    var datevalues = new Array();
                    var timevalues = new Array();
                    datevalues = date.split('/');
                    timevalues = time.split(':');
                    ServerDate = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
                    BindUpdate(msg.vehiclesupdatelist, ServerDate);
                }
                else {
                }
            };
            var e = function (x, h, e) {
                // $('#BookingDetails').html(x);
            };
            Pace.ignore(function () {
                callHandler(data, s, e);
            });
        }

        var livedata = null;
        var nonworkingvehicles = [];
        var yes = false;
        function BindUpdate(data, ServerDt) {
            nonworkingvehicles = [];
            livedata = data;
            var j = 0;
            latlng_pos = [];

            if (slctdmap == "Openstreet Map") {
                deleteOverlaysOSM();
            }
            else {
                deleteOverlays();
            }
            for (var vehicledata in data) {
                var vehicleid = data[vehicledata].idvehicle_properties;
                var vehicleno = data[vehicledata].vehiclenum;
                var vehicle = $('#VehiclesTable').find("#" + data[vehicledata].idvehicle_properties + "");
                var mainpower = data[vehicledata].mainpower;
                var latitude = data[vehicledata].latitude;
                var longitude = data[vehicledata].longitude;
                var angle = data[vehicledata].direction;
                var updatedata = data[vehicledata].Datetime;

                //var ignation = data[vehicledata].Ignation;
                //var acstatus = data[vehicledata].ACStatus;

                var speed = data[vehicledata].Speed;
                var odometervalue = data[vehicledata].odometervalue;
                var gps = data[vehicledata].GPSSignal;
                var geofence = data[vehicledata].Geofence;
                var todaymileage = data[vehicledata].todaymileage;
                var dieselstring = data[vehicledata].dieselvalue;
                var fulltankval = data[vehicledata].fulltankval;
                if (mainpower == "ON") {
                    var mainpowericon = vehicle.closest('tr').find('#imgpower');
                    mainpowericon.attr("src", "LiveIcons/Green%20power.png");
                    mainpowericon.attr('title', 'Power On');
                }
                else {
                    var mainpowericon = vehicle.closest('tr').find('#imgpower');
                    mainpowericon.attr("src", "LiveIcons/Red%20Power.png");
                    mainpowericon.attr('title', 'Power Off');
                }
                if (speed > 0) {
                    var mainpowericon = vehicle.closest('tr').find('#imgspeed');
                    mainpowericon.attr("src", "LiveIcons/State1.png");
                    mainpowericon.attr('title', "Speed : " + speed + " Kms/Hr");
                }
                else {
                    var mainpowericon = vehicle.closest('tr').find('#imgspeed');
                    mainpowericon.attr("src", "LiveIcons/State3.png");
                    mainpowericon.attr('title', "Speed : " + speed + " Kms/Hr");
                }
                if (gps == "V") {
                    var mainpowericon = vehicle.closest('tr').find('#imggps');
                    mainpowericon.attr("src", "LiveIcons/GPSV.png");
                    mainpowericon.attr('title', 'GPS Void');
                }
                else {
                    var mainpowericon = vehicle.closest('tr').find('#imggps');
                    mainpowericon.attr("src", "LiveIcons/gpsA.png");
                    mainpowericon.attr('title', 'GPS Active');
                }
                if (deviceconfigdata != null) {
                    for (var i = 0; i < deviceconfigdata.length; i++) {
                        if (deviceconfigdata[i].specification_name != "") {
                            var specification_type = deviceconfigdata[i].specification_type;
                            for (var key in data[vehicledata]) {
                                if (specification_type == key) {
                                    var mainpowericon = vehicle.closest('tr').find('#' + deviceconfigdata[i].specification_type + '');
                                    var val = data[vehicledata][key];
                                    if (val == "1") {
                                        mainpowericon.attr("src", "LiveIcons/" + deviceconfigdata[i].input_on_img + ".png");
                                        mainpowericon.attr('title', deviceconfigdata[i].specification_name + ' On');
                                    }
                                    else {
                                        mainpowericon.attr("src", "LiveIcons/" + deviceconfigdata[i].input_off_img + ".png");
                                        mainpowericon.attr('title', deviceconfigdata[i].specification_name + ' Off');
                                    }
                                }
                            }
                        }
                    }
                }

                try {
                    var date = updatedata.split(" ")[0];
                    var time = updatedata.split(" ")[1];
                    var datevalues = new Array();
                    var timevalues = new Array();
                    datevalues = date.split('/');
                    timevalues = time.split(':');
                    var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
                    todaydate = ServerDt;
                    var _MS_PER_DAY = 86400000;
                    var _MS_PER_aaa = 3600000;
                    var _MS_PER_sss = 60000;
                    var _MS_PER_ddd = 1000;
                    var days = Math.floor((todaydate - updatetime) / _MS_PER_DAY);
                    var hours = Math.floor((todaydate - updatetime) / _MS_PER_aaa);
                    if (hours > 24) {
                        hours = hours % 24;
                    }
                    var min = Math.floor((todaydate - updatetime) / _MS_PER_sss);
                    if (min > 60) {
                        min = min % 60;
                    }
                    var sec = Math.floor((todaydate - updatetime) / _MS_PER_ddd);
                    if (sec > 60) {
                        sec = sec % 60;
                    }
                    var timestamp;
                    if (days >= 1) {
                        var updateicon = vehicle.closest('tr').find('#imgdata');
                        updateicon.attr("src", "LiveIcons/nodataavail.png");
                        updateicon.attr('title', "There was no Update form " + days + " days " + hours + " Hrs " + min + " Min");
                        timestamp = "No Update form " + days + " days " + hours + " Hrs " + min + " Min";
                    }
                    else if (hours > 1) {
                        var updateicon = vehicle.closest('tr').find('#imgdata');
                        updateicon.attr("src", "LiveIcons/MoreDelay.png");
                        updateicon.attr('title', "There was no Update form " + hours + " Hrs " + min + " Min");
                        timestamp = "No Update form " + hours + " Hrs " + min + " Min";
                    }
                    else if (min < 10) {
                        var updateicon = vehicle.closest('tr').find('#imgdata');
                        updateicon.attr("src", "LiveIcons/nodelay.png");
                        updateicon.attr('title', min + " Min " + sec + " Sec Back ");
                        timestamp = min + " Min " + sec + " Sec Back Update";
                    }
                    else if (days < 1) {
                        var updateicon = vehicle.closest('tr').find('#imgdata');
                        updateicon.attr("src", "LiveIcons/halfdelay.png");
                        updateicon.attr('title', "No Update form " + hours + " Hrs " + min + " Min");
                        timestamp = "There is no Update form " + hours + " Hrs " + min + " Min";
                    }
                    if (min > 30 || hours >= 1 || days >= 1) {
                        nonworkingvehicles.push({ vehicleno: vehicleno, timestamp: timestamp });
                    }
                }
                catch (Error) {
                }
                document.getElementById('icon_notworkingvehicles').innerHTML = nonworkingvehicles.length;
                document.getElementById('icon_notworkingvehicles1').innerHTML = nonworkingvehicles.length;
                $('#ul_shownonworkingvehs').html('');
                for (var i = 0; i < nonworkingvehicles.length; i++) {
                    $('#ul_shownonworkingvehs').append('<li><a style="cursor:pointer;"><div class="pull-left"><i class="fa fa-2x fa-taxi"></i></div><h4><span>' + nonworkingvehicles[i].vehicleno + '</span></h4><p><i class="fa fa-clock-o"></i> ' + nonworkingvehicles[i].timestamp + '</p></a></li>');
                }
                document.getElementById('icon_workingvehicles').innerHTML = vehicletypes.length - nonworkingvehicles.length;
                document.getElementById('icon_workingvehicles1').innerHTML = vehicletypes.length - nonworkingvehicles.length;
                $('#ul_showworkingvehs').html('');
                for (var i = 0; i < vehicletypes.length; i++) {
                    var existd = false;
                    for (var j = 0; j < nonworkingvehicles.length; j++) {
                        if (vehicletypes[i].vehicleno == nonworkingvehicles[j].vehicleno) {
                            existd = true;
                        }
                    }
                    if (!existd)
                        $('#ul_showworkingvehs').append('<li><a style="cursor:pointer;"><div class="pull-left"><i class="fa fa-taxi"></i></div><h4><span>' + vehicletypes[i].vehicleno + '</span></h4></a></li>');
                }
                var stpdtimestamp = "0 Min";
                var stoppeddate = data[vehicledata].stoppedfor;
                if (speed == 0 && stoppeddate != "") {
                    try {
                        var stpddate = stoppeddate.split(" ")[0];
                        var stpdtime = stoppeddate.split(" ")[1];
                        var stpddatevalues = new Array();
                        var stpdtimevalues = new Array();
                        stpddatevalues = stpddate.split('/');
                        stpdtimevalues = stpdtime.split(':');
                        var stpdupdatetime = new Date(stpddatevalues[2], stpddatevalues[1] - 1, stpddatevalues[0], stpdtimevalues[0], stpdtimevalues[1], stpdtimevalues[2]);
                        var _MS_PER_DAY = 86400000;
                        var _MS_PER_aaa = 3600000;
                        var _MS_PER_sss = 60000;
                        var _MS_PER_ddd = 1000;
                        var days = Math.floor((updatetime - stpdupdatetime) / _MS_PER_DAY);
                        var hours = Math.floor((updatetime - stpdupdatetime) / _MS_PER_aaa);
                        if (hours > 24) {
                            hours = hours % 24;
                        }
                        var min = Math.floor((updatetime - stpdupdatetime) / _MS_PER_sss);
                        if (min > 60) {
                            min = min % 60;
                        }
                        var sec = Math.floor((updatetime - stpdupdatetime) / _MS_PER_ddd);
                        if (sec > 60) {
                            sec = sec % 60;
                        }
                        if (days >= 1) {
                            stpdtimestamp = days + " days " + hours + " Hrs " + min + " Min";
                        }
                        else if (hours > 1) {
                            stpdtimestamp = hours + " Hrs " + min + " Min";
                        }
                        else if (min < 10) {
                            stpdtimestamp = min + " Min " + sec + " Sec";
                        }
                        else if (days < 1) {
                            stpdtimestamp = hours + " Hrs " + min + " Min";
                        }
                    }
                    catch (Error) {
                    }
                }

                if (checkedvehicles.indexOf(vehicleid) > -1) {
                    var myCenter;
                    if (slctdmap == "Openstreet Map") {
                        myCenter = [[livedata[vehicledata].latitude, livedata[vehicledata].longitude]];
                    }
                    else {
                        myCenter = new google.maps.LatLng(livedata[vehicledata].latitude, livedata[vehicledata].longitude);
                    }
                    var iconsrc;
                    for (var vehicletype in vehicletypes) {
                        if (vehicletypes[vehicletype].idvehicle_properties == vehicleid) {
                            var VehicleType = vehicletypes[vehicletype].vehicletype;
                        }
                    }
                    if (VehicleType == 'Escavator') {
                        iconsrc = "VehicleTypes/" + VehicleType + ".png";
                    }
                    else
                        if (VehicleType == "Roller") {
                            if (speed == 0) {
                                VehicleType = "red" + VehicleType;
                                iconsrc = "VehicleTypes/" + VehicleType + ".png";
                            }
                            else {
                                VehicleType = "green" + VehicleType;
                                iconsrc = "VehicleTypes/" + VehicleType + ".png";
                            }
                        }
                        else {
                            if (VehicleType == "") {
                                VehicleType = "Car";
                            }
                            if (speed == 0) {
                                if (VehicleType == "Truck") {
                                    VehicleType = "Tanker";
                                    VehicleType = "red" + VehicleType;
                                }
                                else {
                                    VehicleType = "red" + VehicleType;
                                }
                                //                                iconsrc = "VehicleTypes/" + VehicleType + ".png";
                            }
                            else {
                                if (VehicleType == "Truck") {
                                    VehicleType = "Tanker";
                                    VehicleType = "green" + VehicleType;
                                }
                                else {
                                    VehicleType = "green" + VehicleType;
                                }

                            }
                            if (angle >= 0 && angle < 22.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "4.png";
                            }
                            else if (angle >= 22.5 && angle < 45) {
                                iconsrc = "VehicleTypes/" + VehicleType + "5.png";
                            }
                            else if (angle >= 45 && angle < 67.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "6.png";
                            }
                            else if (angle >= 67.5 && angle < 90) {
                                iconsrc = "VehicleTypes/" + VehicleType + "7.png";
                            }
                            else if (angle >= 90 && angle < 112.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "8.png";
                            }
                            else if (angle >= 112.5 && angle < 135) {
                                iconsrc = "VehicleTypes/" + VehicleType + "9.png";
                            }
                            else if (angle >= 135 && angle < 157.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "10.png";
                            }
                            else if (angle >= 157.5 && angle < 180) {
                                iconsrc = "VehicleTypes/" + VehicleType + "11.png";
                            }
                            else if (angle >= 180 && angle < 202.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "12.png";
                            }
                            else if (angle >= 202.5 && angle < 225) {
                                iconsrc = "VehicleTypes/" + VehicleType + "13.png";
                            }
                            else if (angle >= 225 && angle < 247.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "14.png";
                            }
                            else if (angle >= 247.5 && angle < 270) {
                                iconsrc = "VehicleTypes/" + VehicleType + "15.png";
                            }
                            else if (angle >= 270 && angle < 292.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "16.png";
                            }
                            else if (angle >= 292.5 && angle < 315) {
                                iconsrc = "VehicleTypes/" + VehicleType + "1.png";
                            }
                            else if (angle >= 315 && angle < 360) {
                                iconsrc = "VehicleTypes/" + VehicleType + "2.png";
                            }
                            else if (angle >= 360) {
                                iconsrc = "VehicleTypes/" + VehicleType + "3.png";
                            }
                        }


                    placeMarker(myCenter, iconsrc, vehicleid, speed, timestamp, todaymileage, stpdtimestamp, vehicleno);
                    latlng_pos[j] = myCenter;

                    if (showtags == true) {
                        var vehtag = "";
                        for (var veh = 0; veh < vehicletypes.length; veh++) {
                            if (vehicletypes[veh].idvehicle_properties == vehicleid) {
                                vehtag = vehicletypes[veh].vehicletag;
                                break;
                            }
                        }
                        for (var i = 0; i < infowindows.length; i++) {
                            if (infowindows[i].content == vehtag) {
                                infowindows[i].close();
                                infowindows.splice(i, 1);
                                break;
                            }
                        }
                        var infotag = new google.maps.InfoWindow();
                        infotag.setOptions({
                            content: vehtag,
                            position: myCenter
                        });
                        infotag.open(googlemap);
                        infowindows.push(infotag);
                    }
                    j++;
                }
            }

            var $rows = $('#VehiclesTable tr');
            $('#search').keyup(function () {
                var val = $.trim($(this).val()).replace(/ +/g, ' ').toLowerCase();
                $rows.show().filter(function () {
                    var text = $(this).text().replace(/\s+/g, ' ').toLowerCase();
                    return !~text.indexOf(val);
                }).hide();
            });
        }

        function addlocations(lat, lng) {
            var mytext = lat + "," + lng;
            window.open('Locations.html?lat=' + lat + "&long=" + lng);
        }

        var infowindows = [];
        var popupcontent = "";
        var showpopup = true;
        function placeMarker(location, iconsrc, vehicleid, speed, timestamp, Odometer, stpdtimestamp, vehicleno) {
            if (slctdmap == "Openstreet Map") {
                var RedIcon = L.Icon.Default.extend({
                    options: {
                        iconUrl: iconsrc,
                        iconSize: [43, 43],
                        iconAnchor: [21, 21],
                        shadowSize: [0, 0],
                        shadowAnchor: [0, 0]
                    }
                });
                var redIcon = new RedIcon();
                var content = "VehicleID : " + vehicleno + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/>" + "Stopped From : " + stpdtimestamp + "<br/><a onclick='addlocations(" + location[0] + "," + location[1] + ")'>Add to My Locations</a>";
                var marker;
                if (OSMClusterview == true) {
                    marker = new L.marker([location[0][0], location[0][1]], { icon: redIcon }).bindPopup(content);
                    OSMClusteredMarkers.addLayer(marker);
                    openstreetmap.addLayer(OSMClusteredMarkers);
                }
                else {
                    marker = new L.marker([location[0][0], location[0][1]], { icon: redIcon }).bindPopup(content).addTo(openstreetmap);
                }
                markersArrayOSM.push(marker);
                //                OSMClusteredMarkers.on('click', function (a) {
                //                    alert('Marker Clicked');
                //                 });
                // OSMClusteredMarkers.on('clusterclick', function (a) { alert('Cluster Clicked'); });
            }
            else {
                var image = new google.maps.MarkerImage(iconsrc,
                // This marker is 20 pixels wide by 32 pixels tall.
        null,
                // The origin for this image is 0,0.
        new google.maps.Point(0, 0),
                // The anchor for this image is the base of the flagpole at 0,32.
        new google.maps.Point(20, 20)
    );
                var marker = new google.maps.Marker({
                    position: location,
                    map: googlemap,
                    center: location,
                    zoom: 10,
                    icon: image,
                    title: vehicleno
                });

                markersArray.push(marker);
                if (clusteredview) {
                    markerClusterer.addMarker(marker);
                }
                var address;
                geocoder = new google.maps.Geocoder();
                infoWindow.close();
                address = geocoder.geocode({ 'latLng': location }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        if (results.length > 0) {
                            if (results[0]) {
                                address = results[0].formatted_address;

                                var content = "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/>" + "Stopped From : " + stpdtimestamp + "<br/><a style='cursor: pointer;' onclick='addlocations(" + location.lat() + "," + location.lng() + ")'>Add to My Locations</a><a style='padding-left: 20px;cursor: pointer;' onclick='viewtodayhistory(" + vehicleid + ")' data-toggle='modal' data-target='#myModal'>View today's history</a>";
                                var infowindow = new google.maps.InfoWindow({
                                    content: content
                                });

                                google.maps.event.addListener(marker, 'click', function () {
                                    infowindow.open(googlemap, marker);
                                });
                                attachInfowindow(marker, location, "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/>" + "Stopped From : " + stpdtimestamp);
                            }
                            else {
                                address = "No results";

                                var content = "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/>" + "Stopped From : " + stpdtimestamp;
                                var infowindow = new google.maps.InfoWindow({
                                    content: content
                                });

                                google.maps.event.addListener(marker, 'click', function () {
                                    infowindow.open(googlemap, marker);
                                });
                                attachInfowindow(marker, location, "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/>" + "Stopped From : " + stpdtimestamp);
                            }
                        }
                        else {
                            address = "No results";

                            var content = "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/>" + "Stopped From : " + stpdtimestamp + "<br/><a style='cursor: pointer;' onclick='addlocations(" + location.lat() + "," + location.lng() + ")'>Add to My Locations</a><a style='padding-left: 20px;cursor: pointer;' onclick='viewtodayhistory(" + vehicleid + ")' data-toggle='modal' data-target='#myModal'>View today's history</a>";
                            var infowindow = new google.maps.InfoWindow({
                                content: content
                            });

                            google.maps.event.addListener(marker, 'click', function () {
                                infowindow.open(googlemap, marker);
                            });
                            attachInfowindow(marker, location, "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/>" + "Stopped From : " + stpdtimestamp);
                        }
                    }
                    else {
                        address = "No results";

                        var content = "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/>" + "Stopped From : " + stpdtimestamp + "<br/><a style='cursor: pointer;' onclick='addlocations(" + location.lat() + "," + location.lng() + ")'>Add to My Locations</a><a style='padding-left: 20px;cursor: pointer;' onclick='viewtodayhistory(" + vehicleid + ")' data-toggle='modal' data-target='#myModal'>View today's history</a>";


                        var infowindow = new google.maps.InfoWindow({
                            content: content
                        });

                        google.maps.event.addListener(marker, 'click', function () {
                            infowindow.open(googlemap, marker);
                        });
                        attachInfowindow(marker, location, "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/>" + "Stopped From : " + stpdtimestamp);
                    }
                });
            }
        }

        function trhover(id) {
            var newColor = '#d5d5d5';
            id.style.backgroundColor = (newColor == id.style.backgroundColor) ? origColor : newColor;
        }
        function trmouseout(id) {
            var newColor = 'transparent';
            id.style.backgroundColor = (newColor == id.style.backgroundColor) ? origColor : newColor;
        }
        function onvehicleclick(id, vehicleid, vehicleno) {
            var Vehicleclicked = false;
            for (var vehicletype in checkedvehicles) {
                if (checkedvehicles[vehicletype] == vehicleid) {
                    Vehicleclicked = true;
                }
            }
            if (Vehicleclicked) {
                for (var vehicledata in livedata) {
                    if (livedata[vehicledata].idvehicle_properties == vehicleid) {
                        var updatedata = livedata[vehicledata].Datetime;
                        var Odometer = livedata[vehicledata].todaymileage;
                        var latitude = livedata[vehicledata].latitude;
                        var longitude = livedata[vehicledata].longitude;
                        var date = updatedata.split(" ")[0];
                        var time = updatedata.split(" ")[1];
                        var datevalues = new Array();
                        var timevalues = new Array();
                        datevalues = date.split('/');
                        timevalues = time.split(':');
                        var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
                        todaydate = ServerDate;
                        var _MS_PER_DAY = 86400000;
                        var _MS_PER_aaa = 3600000;
                        var _MS_PER_sss = 60000;
                        var _MS_PER_ddd = 1000;
                        var days = Math.floor((todaydate - updatetime) / _MS_PER_DAY);
                        var hours = Math.floor((todaydate - updatetime) / _MS_PER_aaa);
                        if (hours > 24) {
                            hours = hours % 24;
                        }
                        var min = Math.floor((todaydate - updatetime) / _MS_PER_sss);
                        if (min > 60) {
                            min = min % 60;
                        }
                        var sec = Math.floor((todaydate - updatetime) / _MS_PER_ddd);
                        if (sec > 60) {
                            sec = sec % 60;
                        }
                        var timestamp;
                        if (days >= 1) {
                            timestamp = "There was no Update form " + days + " days " + hours + " Hrs " + min + " Min";
                        }
                        else if (hours > 1) {
                            timestamp = "There was no Update form " + hours + " Hrs " + min + " Min";
                        }
                        else if (min < 5) {
                            timestamp = min + " Min " + sec + " Sec Back Update";
                        }
                        else if (days < 1) {
                            timestamp = "There was no Update form " + hours + " Hrs " + min + " Min";
                        }
                        var speed = livedata[vehicledata].Speed;
                        var myCenter;
                        if (slctdmap == "Openstreet Map") {
                            showpopup = true;
                            popupcontent = "VehicleID : " + vehicleno + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs";
                            geocoding.geocode(livedata[vehicledata].latitude + ',' + livedata[vehicledata].longitude);
                            myCenter = [[livedata[vehicledata].latitude, livedata[vehicledata].longitude]];
                            openstreetmap.panTo(new L.LatLng(livedata[vehicledata].latitude, livedata[vehicledata].longitude));
                        }
                        else {
                            myCenter = new google.maps.LatLng(livedata[vehicledata].latitude, livedata[vehicledata].longitude);
                            googlemap.panTo(myCenter);
                        }

                        if (slctdmap == "Google Map") {
                            var address;
                            geocoder = new google.maps.Geocoder();
                            infoWindow.close();
                            address = geocoder.geocode({ 'latLng': myCenter }, function (results, status) {
                                if (status == google.maps.GeocoderStatus.OK) {
                                    if (results.length > 0) {
                                        if (results[0]) {
                                            address = results[0].formatted_address;

                                            infoWindow.close();
                                            infoWindow.setOptions({
                                                content: "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/><a style='text-decoration: underline;color:blue; cursor:pointer;'  onclick='addlocations(" + latitude + "," + longitude + ")'>Add to My Locations</a><a style='padding-left: 20px;cursor: pointer;' onclick='viewtodayhistory(" + vehicleid + ")' data-toggle='modal' data-target='#myModal'>View today's history</a>",
                                                position: myCenter
                                            });
                                            infoWindow.open(googlemap);
                                        }
                                        else {
                                            address = "No results";

                                            infoWindow.close();
                                            infoWindow.setOptions({
                                                content: "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/><a style='text-decoration: underline;color:blue; cursor:pointer;'  onclick='addlocations(" + latitude + "," + longitude + ")'>Add to My Locations</a><a style='padding-left: 20px;cursor: pointer;' onclick='viewtodayhistory(" + vehicleid + ")' data-toggle='modal' data-target='#myModal'>View today's history</a>",
                                                position: myCenter
                                            });
                                            infoWindow.open(googlemap);
                                        }
                                    }
                                    else {
                                        address = "No results";

                                        infoWindow.close();
                                        infoWindow.setOptions({
                                            content: "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/><a style='text-decoration: underline;color:blue; cursor:pointer;'  onclick='addlocations(" + latitude + "," + longitude + ")'>Add to My Locations</a><a style='padding-left: 20px;cursor: pointer;' onclick='viewtodayhistory(" + vehicleid + ")' data-toggle='modal' data-target='#myModal'>View today's history</a>",
                                            position: myCenter
                                        });
                                        infoWindow.open(googlemap);
                                    }
                                }
                                else {
                                    address = "No results";

                                    infoWindow.close();
                                    infoWindow.setOptions({
                                        content: "VehicleID : " + vehicleno + "<br/>" + "Address : " + address + "<br/>" + "Speed : " + speed + " KMPH" + "<br/>" + "Update Status : " + timestamp + "<br/>" + "Today Mileage : " + Odometer + " KMs<br/><a style='text-decoration: underline;color:blue; cursor:pointer;'  onclick='addlocations(" + latitude + "," + longitude + ")'>Add to My Locations</a><a style='padding-left: 20px;cursor: pointer;' onclick='viewtodayhistory(" + vehicleid + ")' data-toggle='modal' data-target='#myModal'>View today's history</a>",
                                        position: myCenter
                                    });
                                    infoWindow.open(googlemap);
                                }
                            });
                        }
                    }
                }
            }
        }

        var todaydate;
        function bphover(me, vehicleid, vehicleno) {
            var imeino = "";
            for (var v in allvehsdata) {
                if (vehicleid == allvehsdata[v].idvehicle_properties) {
                    imeino = allvehsdata[v].main_user_imeino;
                    break;
                }
            }
            var valu = $('#displaydiv');
            $('#displaydiv').css("display", "block");
            var pos = $(me).offset();
            var content = "";
            var timestamp;
            var myCenterZoom;
            for (var vehicledata in livedata) {
                var vehicleno = livedata[vehicledata].vehiclenum;
                var speed = livedata[vehicledata].Speed;
                var Odometer = livedata[vehicledata].todaymileage;
                var updatedata = livedata[vehicledata].Datetime;
                if (updatedata != "") {
                    var date = updatedata.split(" ")[0];
                    var time = updatedata.split(" ")[1];
                    var datevalues = new Array();
                    var timevalues = new Array();
                    datevalues = date.split('/');
                    timevalues = time.split(':');
                    var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
                    todaydate = ServerDate;
                    var _MS_PER_DAY = 86400000;
                    var _MS_PER_aaa = 3600000;
                    var _MS_PER_sss = 60000;
                    var _MS_PER_ddd = 1000;
                    var days = Math.floor((todaydate - updatetime) / _MS_PER_DAY);
                    var hours = Math.floor((todaydate - updatetime) / _MS_PER_aaa);
                    if (hours > 24) {
                        hours = hours % 24;
                    }
                    var min = Math.floor((todaydate - updatetime) / _MS_PER_sss);
                    if (min > 60) {
                        min = min % 60;
                    }
                    var sec = Math.floor((todaydate - updatetime) / _MS_PER_ddd);
                    if (sec > 60) {
                        sec = sec % 60;
                    }

                    if (days >= 1) {
                        timestamp = "No Update form " + days + " days " + hours + " Hrs " + min + " Min";
                    }
                    else if (hours > 1) {
                        timestamp = "No Update form " + hours + " Hrs " + min + " Min";
                    }
                    else if (min < 5) {
                        timestamp = min + " Min " + sec + " Sec Back";
                    }
                    else if (days < 1) {
                        timestamp = "No Update form " + hours + " Hrs " + min + " Min";
                    }

                    var stpdtimestamp = "0 Min";
                    var stoppeddate = livedata[vehicledata].stoppedfor;
                    if (speed == 0 && stoppeddate != "") {
                        try {
                            var stpddate = stoppeddate.split(" ")[0];
                            var stpdtime = stoppeddate.split(" ")[1];
                            var stpddatevalues = new Array();
                            var stpdtimevalues = new Array();
                            stpddatevalues = stpddate.split('/');
                            stpdtimevalues = stpdtime.split(':');
                            var stpdupdatetime = new Date(stpddatevalues[2], stpddatevalues[1] - 1, stpddatevalues[0], stpdtimevalues[0], stpdtimevalues[1], stpdtimevalues[2]);
                            var _MS_PER_DAY = 86400000;
                            var _MS_PER_aaa = 3600000;
                            var _MS_PER_sss = 60000;
                            var _MS_PER_ddd = 1000;
                            var days = Math.floor((updatetime - stpdupdatetime) / _MS_PER_DAY);
                            var hours = Math.floor((updatetime - stpdupdatetime) / _MS_PER_aaa);
                            if (hours > 24) {
                                hours = hours % 24;
                            }
                            var min = Math.floor((updatetime - stpdupdatetime) / _MS_PER_sss);
                            if (min > 60) {
                                min = min % 60;
                            }
                            var sec = Math.floor((updatetime - stpdupdatetime) / _MS_PER_ddd);
                            if (sec > 60) {
                                sec = sec % 60;
                            }
                            if (days >= 1) {
                                stpdtimestamp = days + " days " + hours + " Hrs " + min + " Min";
                            }
                            else if (hours > 1) {
                                stpdtimestamp = hours + " Hrs " + min + " Min";
                            }
                            else if (min < 10) {
                                stpdtimestamp = min + " Min " + sec + " Sec";
                            }
                            else if (days < 1) {
                                stpdtimestamp = hours + " Hrs " + min + " Min";
                            }
                        }
                        catch (Error) {
                        }
                    }

                    var vehicle = $('#VehiclesTable').find("#" + livedata[vehicledata].idvehicle_properties + "");
                    if (vehicleid == livedata[vehicledata].idvehicle_properties) {
                        content = "Vehicle ID : " + vehicleno + "<br/><br/>" + "Speed : " + livedata[vehicledata].Speed + " Kms/Hr<br/><br/>" + "Ignition : " + livedata[vehicledata].Ignation + "<br/><br/>" + "A\C Status : " + livedata[vehicledata].ACStatus + "<br/><br/>" + "Update Status : " + timestamp + "<br/><br/>" + "Today Mileage : " + Odometer + " KMs<br/><br/>" + "Stopped From : " + stpdtimestamp + "<br/><br/>" + "IMEI No : " + imeino;
                    }
                }
            }

            $("#displaydiv").html(content);

            var top = $(document).scrollTop();
            var tothei = $(document).height();
            var xx = window.screen.availHeight;
            var aa = pos.top;
            var zz = aa + 40;
            if ((top + xx) >= (pos.top + $('#displaydiv').height() + 30 + ($('#displaydiv').height() * 0.5))) {
                $('#displaydiv').css("top", zz).css("left", pos.left + 30);
            }
            else {
                if ((pos.top - $('#displaydiv').height()) < 0) {
                    $('#displaydiv').css("top", "0").css("left", pos.left + 30);
                }
                else {
                    $('#displaydiv').css("top", pos.top - $('#displaydiv').height() - 30).css("left", pos.left + 30);
                }
            }
        }
        function attachInfowindow(marker, latlng, country) {
            var location = latlng;
            var boxText = document.createElement("div");
            boxText.style.cssText = "border: 1px solid black; margin-top: 8px; background: white; padding: 5px;";
            boxText.innerHTML = '<b>' + country + '</b><br />';

            var myOptions = {
                content: boxText
                , disableAutoPan: false
                , maxWidth: 0
                , pixelOffset: new google.maps.Size(-140, 0)
                , zIndex: null
                , boxStyle: {
                    background: "url('../images/tipbox.gif') no-repeat"
                  , opacity: 0.9
                  , width: "350px"
                }
                , closeBoxMargin: "10px 5px 0px 2px"
                , closeBoxURL: ""
                , infoBoxClearance: new google.maps.Size(1, 1)
                , isHidden: false
                , pane: "floatPane"
                , enableEventPropagation: false
            };


            var ib = new InfoBox(myOptions);
            //var infowindow = new google.maps.InfoWindow({ content: '<b>' + description + '</b><br />' + location });
            google.maps.event.addListener(marker, 'mouseover', function () {
                //infowindow.open(googlemap,marker);
                ib.open(googlemap, marker);
            });
            google.maps.event.addListener(marker, 'mouseout', function () {
                //infowindow.close();
                ib.close();
            });
        }

        function bpmouseout() {
            $("#displaydiv").css("display", "none"); $("#displaydiv").html("");
        }
        var checkedvehicles = [];
        var latlng_pos = [];
        function oncheck(id, onckvehicleid) {
            var vehtag = "";
            for (var veh = 0; veh < vehicletypes.length; veh++) {
                if (vehicletypes[veh].idvehicle_properties == onckvehicleid) {
                    vehtag = vehicletypes[veh].vehicletag;
                    break;
                }
            }
            for (var i = checkedvehicles.length - 1; i >= 0; i--) {
                if (checkedvehicles[i] === onckvehicleid) {
                    checkedvehicles.splice(i, 1);
                }
            }
            if (id.checked == true) {
                checkedvehicles.push(onckvehicleid);
            }
            for (var i = 0; i < infowindows.length; i++) {
                if (infowindows[i].content == vehtag) {
                    infowindows[i].close();
                    infowindows.splice(i, 1);
                }
            }

            if (currentpage == 'Liveview') {
                update();
            }
        }

        function update() {
            if (slctdmap == "Openstreet Map") {
                deleteOverlaysOSM();
            }
            else {
                deleteOverlays();
            }
            var j = 0;
            latlng_pos = [];
            for (var vehicledata in livedata) {
                var vehicleid = livedata[vehicledata].idvehicle_properties;
                var vehicleno = livedata[vehicledata].vehiclenum;
                var speed = livedata[vehicledata].Speed;
                var angle = livedata[vehicledata].direction;
                var updatedata = livedata[vehicledata].Datetime;
                var ignation = livedata[vehicledata].Ignation;
                var acstatus = livedata[vehicledata].ACStatus;
                var date = updatedata.split(" ")[0];
                var time = updatedata.split(" ")[1];
                var todaymileage = livedata[vehicledata].todaymileage;
                try {
                    var datevalues = new Array();
                    var timevalues = new Array();
                    datevalues = date.split('/');
                    timevalues = time.split(':');
                    var updatetime = new Date(datevalues[2], datevalues[1] - 1, datevalues[0], timevalues[0], timevalues[1], timevalues[2]);
                    todaydate = ServerDate;
                    var _MS_PER_DAY = 86400000;
                    var _MS_PER_aaa = 3600000;
                    var _MS_PER_sss = 60000;
                    var _MS_PER_ddd = 1000;
                    var days = Math.floor((todaydate - updatetime) / _MS_PER_DAY);
                    var hours = Math.floor((todaydate - updatetime) / _MS_PER_aaa);
                    if (hours > 24) {
                        hours = hours % 24;
                    }
                    var min = Math.floor((todaydate - updatetime) / _MS_PER_sss);
                    if (min > 60) {
                        min = min % 60;
                    }
                    var sec = Math.floor((todaydate - updatetime) / _MS_PER_ddd);
                    if (sec > 60) {
                        sec = sec % 60;
                    }
                    var timestamp;
                    if (days >= 1) {
                        timestamp = "There is no Update form " + days + " days " + hours + " Hrs " + min + " Min";
                    }
                    else if (hours > 1) {
                        timestamp = "There is no Update form " + hours + " Hrs " + min + " Min";
                    }
                    else if (min < 5) {
                        timestamp = min + " Min " + sec + " Sec Back Update";
                    }
                    else if (days < 1) {
                        timestamp = "There is no Update form " + hours + " Hrs " + min + " Min";
                    }
                }
                catch (Error) {
                }
                var stpdtimestamp = "0 Min";
                var stoppeddate = livedata[vehicledata].stoppedfor;
                if (speed == 0 && stoppeddate != "") {
                    try {
                        var stpddate = stoppeddate.split(" ")[0];
                        var stpdtime = stoppeddate.split(" ")[1];
                        var stpddatevalues = new Array();
                        var stpdtimevalues = new Array();
                        stpddatevalues = stpddate.split('/');
                        stpdtimevalues = stpdtime.split(':');
                        var stpdupdatetime = new Date(stpddatevalues[2], stpddatevalues[1] - 1, stpddatevalues[0], stpdtimevalues[0], stpdtimevalues[1], stpdtimevalues[2]);
                        var _MS_PER_DAY = 86400000;
                        var _MS_PER_aaa = 3600000;
                        var _MS_PER_sss = 60000;
                        var _MS_PER_ddd = 1000;
                        var days = Math.floor((updatetime - stpdupdatetime) / _MS_PER_DAY);
                        var hours = Math.floor((updatetime - stpdupdatetime) / _MS_PER_aaa);
                        if (hours > 24) {
                            hours = hours % 24;
                        }
                        var min = Math.floor((updatetime - stpdupdatetime) / _MS_PER_sss);
                        if (min > 60) {
                            min = min % 60;
                        }
                        var sec = Math.floor((updatetime - stpdupdatetime) / _MS_PER_ddd);
                        if (sec > 60) {
                            sec = sec % 60;
                        }
                        if (days >= 1) {
                            stpdtimestamp = days + " days " + hours + " Hrs " + min + " Min";
                        }
                        else if (hours > 1) {
                            stpdtimestamp = hours + " Hrs " + min + " Min";
                        }
                        else if (min < 10) {
                            stpdtimestamp = min + " Min " + sec + " Sec";
                        }
                        else if (days < 1) {
                            stpdtimestamp = hours + " Hrs " + min + " Min";
                        }
                    }
                    catch (Error) {
                    }
                }
                var vehicle = $('#VehiclesTable').find("#" + livedata[vehicledata].idvehicle_properties + "");
                if (checkedvehicles.indexOf(vehicleid) > -1) {
                    var myCenter;
                    if (slctdmap == "Openstreet Map") {
                        myCenter = [[livedata[vehicledata].latitude, livedata[vehicledata].longitude]];
                    }
                    else {
                        myCenter = new google.maps.LatLng(livedata[vehicledata].latitude, livedata[vehicledata].longitude);
                    }

                    var iconsrc;
                    for (var vehicletype in vehicletypes) {
                        if (vehicletypes[vehicletype].idvehicle_properties == vehicleid) {
                            var VehicleType = vehicletypes[vehicletype].vehicletype;
                        }
                    }
                    if (VehicleType == 'Escavator') {
                        iconsrc = "VehicleTypes/" + VehicleType + ".png";
                    }
                    else
                        if (VehicleType == "Roller") {
                            if (speed == 0) {
                                VehicleType = "red" + VehicleType;
                                iconsrc = "VehicleTypes/" + VehicleType + ".png";
                            }
                            else {
                                VehicleType = "green" + VehicleType;
                                iconsrc = "VehicleTypes/" + VehicleType + ".png";
                            }
                        }
                        else {
                            if (VehicleType == "") {
                                VehicleType = "Car";
                            }
                            if (speed == 0) {
                                if (VehicleType == "Truck") {
                                    VehicleType = "Tanker";
                                    VehicleType = "red" + VehicleType;
                                }
                                else {
                                    VehicleType = "red" + VehicleType;
                                }
                            }
                            else {
                                if (VehicleType == "Truck") {
                                    VehicleType = "Tanker";
                                    VehicleType = "green" + VehicleType;
                                }
                                else {
                                    VehicleType = "green" + VehicleType;
                                }
                            }
                            if (angle >= 0 && angle < 22.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "4.png";
                            }
                            else if (angle >= 22.5 && angle < 45) {
                                iconsrc = "VehicleTypes/" + VehicleType + "5.png";
                            }
                            else if (angle >= 45 && angle < 67.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "6.png";
                            }
                            else if (angle >= 67.5 && angle < 90) {
                                iconsrc = "VehicleTypes/" + VehicleType + "7.png";
                            }
                            else if (angle >= 90 && angle < 112.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "8.png";
                            }
                            else if (angle >= 112.5 && angle < 135) {
                                iconsrc = "VehicleTypes/" + VehicleType + "9.png";
                            }
                            else if (angle >= 135 && angle < 157.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "10.png";
                            }
                            else if (angle >= 157.5 && angle < 180) {
                                iconsrc = "VehicleTypes/" + VehicleType + "11.png";
                            }
                            else if (angle >= 180 && angle < 202.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "12.png";
                            }
                            else if (angle >= 202.5 && angle < 225) {
                                iconsrc = "VehicleTypes/" + VehicleType + "13.png";
                            }
                            else if (angle >= 225 && angle < 247.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "14.png";
                            }
                            else if (angle >= 247.5 && angle < 270) {
                                iconsrc = "VehicleTypes/" + VehicleType + "15.png";
                            }
                            else if (angle >= 270 && angle < 292.5) {
                                iconsrc = "VehicleTypes/" + VehicleType + "16.png";
                            }
                            else if (angle >= 292.5 && angle < 315) {
                                iconsrc = "VehicleTypes/" + VehicleType + "1.png";
                            }
                            else if (angle >= 315 && angle < 360) {
                                iconsrc = "VehicleTypes/" + VehicleType + "2.png";
                            }
                            else if (angle >= 360) {
                                iconsrc = "VehicleTypes/" + VehicleType + "3.png";
                            }
                            //                            }
                        }
                    placeMarker(myCenter, iconsrc, vehicleid, speed, timestamp, todaymileage, stpdtimestamp, vehicleno);
                    latlng_pos[j] = myCenter;

                    if (showtags == true) {
                        var vehtag = "";
                        for (var veh = 0; veh < vehicletypes.length; veh++) {
                            if (vehicletypes[veh].idvehicle_properties == vehicleid) {
                                vehtag = vehicletypes[veh].vehicletag;
                                break;
                            }
                        }
                        for (var i = 0; i < infowindows.length; i++) {
                            if (infowindows[i].content == vehtag) {
                                infowindows[i].close();
                                infowindows.splice(i, 1);
                                break;
                            }
                        }
                        var infotag = new google.maps.InfoWindow();
                        infotag.setOptions({
                            content: vehtag,
                            position: myCenter
                        });
                        infotag.open(googlemap);
                        infowindows.push(infotag);
                    }

                    j++;
                }
                else {
                }
            }
            if (slctdmap == "Openstreet Map") {
                var bounds = [];
                if (latlng_pos.length > 1) {
                    for (var i = 0; i < latlng_pos.length; i++) {
                        bounds.push(latlng_pos[i]);
                    }
                    openstreetmap.fitBounds(bounds);
                }
                else if (latlng_pos.length == 1) {
                    for (var i = 0; i < latlng_pos.length; i++) {
                        bounds.push(latlng_pos[i]);
                    }
                    openstreetmap.fitBounds(bounds);
                }
                else {
                    //                        openstreetmap.panTo(new L.LatLng(17.497535, 78.408622));
                    openstreetmap.setView(new L.LatLng(17.497535, 78.408622), 5);
                }
            }
            else {
                var latlngbounds = new google.maps.LatLngBounds();
                if (latlng_pos.length > 1) {
                    for (var i = 0; i < latlng_pos.length; i++) {
                        latlngbounds.extend(latlng_pos[i]);
                    }
                    googlemap.fitBounds(latlngbounds);
                }
                else if (latlng_pos.length == 1) {
                    for (var i = 0; i < latlng_pos.length; i++) {
                        latlngbounds.extend(latlng_pos[i]);
                    }
                    googlemap.fitBounds(latlngbounds);
                    googlemap.setZoom(12);
                }
                else {
                    googlemap.setCenter(new google.maps.LatLng(17.497535, 78.408622));
                    googlemap.setZoom(6);
                }
            }
        }

        function onallcheck(id) {
            checkedvehicles = [];
            for (var vehicledata in vehicletypes) {
                var vehicleno = vehicletypes[vehicledata].idvehicle_properties;
                var vehicle = $('#VehiclesTable').find("#" + vehicletypes[vehicledata].idvehicle_properties + "");
                if (id.checked == true) {
                    if (typeof vehicle[0] === "undefined") {
                    }
                    else {
                        $(vehicle[0]).iCheck('check');
                        //vehicle[0].checked = true;
                        //checkedvehicles.push(vehicleno);
                    }
                }
                else {
                    if (typeof vehicle[0] === "undefined") {
                    }
                    else {
                        $(vehicle[0]).iCheck('uncheck');
                        //vehicle[0].checked = false;
                    }
                }
            }
            if (currentpage == 'Liveview') {
                if (slctdmap == "Openstreet Map") {
                    update();
                    var bounds = [];
                    if (latlng_pos.length > 1) {
                        for (var i = 0; i < latlng_pos.length; i++) {
                            bounds.push(latlng_pos[i]);
                        }
                        openstreetmap.fitBounds(bounds);
                    }
                    else if (latlng_pos.length == 1) {
                        for (var i = 0; i < latlng_pos.length; i++) {
                            bounds.push(latlng_pos[i]);
                        }
                        openstreetmap.fitBounds(bounds);
                    }
                    else {
                        //                    openstreetmap.panTo(new L.LatLng(78.408622, 17.497535));
                        openstreetmap.setView(new L.LatLng(17.497535, 78.408622), 5);
                    }
                }
                else {
                    closeinfowindow();
                    update();
                    var latlngbounds = new google.maps.LatLngBounds();
                    if (latlng_pos.length > 1) {
                        for (var i = 0; i < latlng_pos.length; i++) {
                            latlngbounds.extend(latlng_pos[i]);
                        }
                        googlemap.fitBounds(latlngbounds);
                    }
                    else if (latlng_pos.length == 1) {
                        for (var i = 0; i < latlng_pos.length; i++) {
                            latlngbounds.extend(latlng_pos[i]);
                        }
                        googlemap.fitBounds(latlngbounds);
                        googlemap.setZoom(12);
                    }
                    else {
                        googlemap.setCenter(new google.maps.LatLng(17.497535, 78.408622));
                        googlemap.setZoom(6);
                    }
                    if (id.checked == false) {
                        for (var i = infowindows.length - 1; i >= 0; i--) {
                            infowindows[i].close();
                            infowindows.splice(i, 1);
                        }
                    }
                }
            }
        }
    </script>
    //view today's history
    <script type="text/javascript">
        var btmdivhidden = false;
        function clicked() {
            if (btmdivhidden) {
                $(".togglediv").slideUp("fast", function () {
                });
                btmdivhidden = false;
                $("#btnshowdiv").css("display", "block");
            }
            else {
                $(".togglediv").slideDown("fast", function () {
                });
                btmdivhidden = true;
                $("#btnshowdiv").css("display", "none");
            }
        }

        function btn_gethistory_click() {
            var vehicleid = $('.lbl_historyvehnocls').attr('id');
            var vehicleno = $('.lbl_historyvehnocls').html();
            openhistorypopup(vehicleid, vehicleno);
        }

        var hstry_map;
        function viewtodayhistory(vehicleid) {
            var startdate;
            var enddate;
            var today = new Date();
            var hrs = '00', mnts = '00';
            if (getCookie("day_time") != "" && getCookie("day_time") != "00:00:00") {
                var prevday = new Date();
                var day_time = getCookie("day_time");
                var day_time_array = day_time.split(':');
                hrs = day_time_array[0];
                mnts = day_time_array[1];
                prevday.setHours(hrs);
                prevday.setMinutes(mnts);
                if (prevday > new Date()) {
                    prevday.setDate(prevday.getDate() - 1);
                }
                else {
                    today.setDate(today.getDate() + 1);
                }
                var pdd = prevday.getDate();
                var pmm = prevday.getMonth() + 1;
                var pyyyy = prevday.getFullYear();
                if (pdd < 10) {
                    pdd = '0' + pdd;
                }
                if (pmm < 10) {
                    pmm = '0' + pmm;
                }

                var dd = today.getDate();
                var mm = today.getMonth() + 1;
                var yyyy = today.getFullYear();
                if (dd < 10) {
                    dd = '0' + dd;
                }
                if (mm < 10) {
                    mm = '0' + mm;
                }
                $('#txt_startdate_history').val(pyyyy + '-' + pmm + '-' + pdd + 'T' + hrs + ':' + mnts);
                $('#txt_enddate_history').val(yyyy + '-' + mm + '-' + dd + 'T' + hrs + ':' + mnts);
            }
            else {
                var dd = today.getDate();
                var mm = today.getMonth() + 1;
                var yyyy = today.getFullYear();
                if (dd < 10) {
                    dd = '0' + dd;
                }
                if (mm < 10) {
                    mm = '0' + mm
                }
                var hrs = today.getHours();
                if (hrs < 10) {
                    hrs = '0' + hrs
                }
                var mnts = today.getMinutes();
                if (mnts < 10) {
                    mnts = '0' + mnts
                }
                $('#txt_startdate_history').val(yyyy + '-' + mm + '-' + dd + 'T00:00');
                $('#txt_enddate_history').val(yyyy + '-' + mm + '-' + dd + 'T23:59');
            }

            var vehicleno = "";
            for (var i = 0; i < allvehsdata.length; i++) {
                if (allvehsdata[i].idvehicle_properties == vehicleid) {
                    vehicleno = allvehsdata[i].vehicleno;
                    break;
                }
            }
            openhistorypopup(vehicleid, vehicleno);
        }

        var interval;
        var data = [];
        var point;
        var flightPlanCoordinates = new Array();
        var x;
        var count = 0;
        var markersArray_history = [];
        var polilinepath = [];
        var firstlog = false;
        var stoppedmarkers = [];
        var flightPath;
        function openhistorypopup(vehicleid, vehicleno) {
            btmdivhidden = true;
            clicked();
            document.getElementById('lbltripinfo').innerHTML = "Vehicle : <label style='color: #F44336;' class='lbl_historyvehnocls' id=" + vehicleid + ">" + vehicleno + "</label> KMS : <label style='color: #F44336;'> 0.00 </label>";
            var startdate = document.getElementById('txt_startdate_history').value;
            var enddate = document.getElementById('txt_enddate_history').value;
            var data = { 'op': 'get_todayhistory', 'vehicleid': vehicleid, 'startdate': startdate, 'enddate': enddate };
            var s = function (msg) {
                if (msg) {
                    $(".togglediv").slideUp("fast", function () {
                    });
                    $('#div_todayhistory').css('display', 'block');
                    initialize_hstrmap();
                    function initialize_hstrmap() {
                        var myCenter = new google.maps.LatLng(17.497535, 78.408622);
                        var mapProp = {
                            center: myCenter,
                            zoom: 5,
                            panControl: true,
                            panControlOptions: {
                                position: google.maps.ControlPosition.RIGHT_TOP
                            },
                            zoomControl: true,
                            zoomControlOptions: {
                                style: google.maps.ZoomControlStyle.LARGE,
                                position: google.maps.ControlPosition.RIGHT_TOP
                            },
                            mapTypeControlOptions: {
                                style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                                position: google.maps.ControlPosition.RIGHT_BOTTOM
                            },
                            mapTypeId: google.maps.MapTypeId.ROADMAP
                        };
                        hstry_map = new google.maps.Map(document.getElementById("historygoogleMap"), mapProp);
                    }
                    document.getElementById("divlogsgrid").innerHTML = "";
                    if (msg != "Error" && msg.length > 0) {
                        viewhistory(msg);
                    }
                }
                else {
                }
            };
            var e = function (x, h, e) {
                // $('#BookingDetails').html(x);
            };
            callHandler(data, s, e);
        }
        function viewhistory(data) {
            clearInterval(interval);
            $("#speedval").val("speed");
            firstlog = false;
            $('#btnShow').val('Draw');
            count = 0;
            deleteallOverlays();
            function deleteallOverlays() {
                clearallOverlays();
                markersArray_history = [];
                polilinepath = [];
                flightPlanCoordinates = [];
            }

            // Sets the map on all markers in the array.
            function allsetAllMap(map) {
                for (var i = 0; i < markersArray_history.length; i++) {
                    markersArray_history[i].setMap(map);
                }
                for (i = 0; i < polilinepath.length; i++) {
                    polilinepath[i].setMap(map); //or line[i].setVisible(false);
                }
            }

            // Removes the overlays from the map, but keeps them in the array.
            function clearallOverlays() {
                allsetAllMap(null);
            }

            BindResults_History();
            var startodo = 0;
            function BindResults_History() {
                x = document.getElementById('example');
                $('#example').remove();
                var divgrid = document.getElementById("divlogsgrid");
                divgrid.innerHTML = '<table class="table table-condensed" id="example" summary="Route Details" rules="groups" frame="hsides" border="2"  style="height:195px;cursor: pointer; overflow: scroll; border: 1px solid #ffffff;font-family:Arial; font-weight:normal;font-size:12px;" cellpadding="2px" cellspacing="0px"><tr><td style="padding: 0px;"><table class="table table-condensed" style="margin-bottom: 0px;cursor: pointer; overflow: scroll; border: 1px solid #ffffff;font-family:Arial; font-weight:normal;font-size:12px;" cellpadding="2px" cellspacing="0px"><tr style="border-bottom: 1px solid #d5d5d5; background-color: #f39c12; color: #ffffff;font-family: Arial; font-weight: normal; font-size: 12px;">    <th style="text-align: center;">TimeStamp </th> <th style="text-align: center;"> Address </th><th style="text-align: center;"> Speed </th> <th style="text-align: center;"> Status </th><th style="text-align: center;"> Odometer </th> <th style="text-align: center;"> Stopped Time </th></tr></table></td></tr><tr><td><div class="table-responsive" style="margin: -5px -5px 0px -5px;"><div id="divscroll"  style="width: 100%; height: 155px; overflow: auto;"><table class="table table-striped" style="cursor: pointer; overflow: scroll; border: 1px solid #ffffff;font-family:Arial; font-weight:normal;font-size:12px;" cellpadding="2px" cellspacing="0px"><tr id="templateRow" style="display: none; cursor: pointer; border-bottom: 1px solid #d5d5d5;"  onclick="onrowclick(this);"><td style="text-align: center;border-bottom: 1px solid #d5d5d5;"></td><td style="text-align: center;border-bottom: 1px solid #d5d5d5;"> </td> <td style="text-align: center;border-bottom: 1px solid #d5d5d5;"> </td><td style="text-align: center;border-bottom: 1px solid #d5d5d5;"> </td> <td style="text-align: center;border-bottom: 1px solid #d5d5d5;"></td><td style="text-align: center;border-bottom: 1px solid #d5d5d5;"></td></tr></table></div></div></td></tr></table>';
                var image = new google.maps.MarkerImage('Images/pin-icon-start.png', null,
 new google.maps.Point(0, 0),
 new google.maps.Point(16, 25));
                var startmarker = new google.maps.Marker({
                    position: new google.maps.LatLng(data[0].latitude, data[0].longitude),
                    map: hstry_map,
                    center: location,
                    icon: image,
                    zoom: 6
                });
                stoppedmarkers.push(startmarker);
                var Sinfowindow = new google.maps.InfoWindow({
                    content: "Start Point"
                });

                google.maps.event.addListener(startmarker, 'click', function () {
                    Sinfowindow.open(hstry_map, startmarker);
                });
                image = new google.maps.MarkerImage('Images/pin-icon-end.png', null,
new google.maps.Point(0, 0),
new google.maps.Point(16, 25));
                var endmarker = new google.maps.Marker({
                    position: new google.maps.LatLng(data[data.length - 1].latitude, data[data.length - 1].longitude),
                    map: hstry_map,
                    center: location,
                    icon: image,
                    zoom: 6
                });
                stoppedmarkers.push(endmarker);
                var Einfowindow = new google.maps.InfoWindow({
                    content: "End Point"
                });

                google.maps.event.addListener(endmarker, 'click', function () {
                    Einfowindow.open(hstry_map, endmarker);
                });

                var odometerfrom = data[0].odometer;
                startodo = odometerfrom;
                var odometerto = data[data.length - 1].odometer;
                var TotalDistance = odometerto - odometerfrom;

                document.getElementById('lbltripinfo').innerHTML = "Vehicle : <label style='color: #F44336;' class='lbl_historyvehnocls' id=" + data[0].idvehicle_properties + ">" + data[0].vehicleno + "</label> KMS : <label style='color: #F44336;'>" + Math.round(TotalDistance) + "</label> ";

                var startpoint = new google.maps.LatLng(data[0].latitude, data[0].longitude);
                var endpoint = new google.maps.LatLng(data[data.length - 1].latitude, data[data.length - 1].longitude);
                var latlngbounds = new google.maps.LatLngBounds();
                latlngbounds.extend(startpoint);
                latlngbounds.extend(endpoint);
                hstry_map.fitBounds(latlngbounds);
                for (var count = 0; count < data.length; count++) {
                    var Latitude = data[count].latitude;
                    var Longitude = data[count].longitude;
                    var speed = data[count].speed;
                    speed = Math.round(speed);
                    var odometer = data[count].odometer;
                    var timestamp = "";
                    if (speed == 0) {
                        if (count < data.length - 1) {

                            var _MS_PER_DAY = 86400000;
                            var _MS_PER_aaa = 3600000;
                            var _MS_PER_sss = 60000;
                            var _MS_PER_ddd = 1000;
                            var spantime = 0;

                            while (count < data.length - 1 && data[count].speed == 0) {
                                var prestime;
                                if (count < 1) {
                                    prestime = data[count].datetime;
                                }
                                else {
                                    prestime = data[count].datetime;
                                }
                                var upcmngdatetime = data[count + 1].datetime;
                                var date = prestime.split(" ")[0];
                                var time = prestime.split(" ")[1];
                                var AMPM = prestime.split(" ")[2];

                                var datevalues = new Array();
                                var timevalues = new Array();
                                if (date.indexOf("-") != -1) {
                                    datevalues = date.split('-');
                                }
                                else if (date.indexOf("/") != -1) {
                                    datevalues = date.split('/');
                                }
                                timevalues = time.split(':');
                                var exacthours = timevalues[0];
                                if (AMPM == "PM") {
                                    exacthours = parseInt(exacthours);
                                    if (exacthours != "12") {
                                        exacthours = 12 + exacthours;
                                    }
                                }
                                var updatetime = new Date(datevalues[2], datevalues[0] - 1, datevalues[1], exacthours, timevalues[1], timevalues[2]);

                                var upcmngdate = upcmngdatetime.split(" ")[0];
                                var upcmngtime = upcmngdatetime.split(" ")[1];
                                var upcmngAMPM = upcmngdatetime.split(" ")[2];

                                var upcmngdatevalues = new Array();
                                var upcmngtimevalues = new Array();
                                if (upcmngdate.indexOf("-") != -1) {
                                    upcmngdatevalues = upcmngdate.split('-');
                                }
                                else if (upcmngdate.indexOf("/") != -1) {
                                    upcmngdatevalues = upcmngdate.split('/');
                                }
                                upcmngtimevalues = upcmngtime.split(':');
                                var upcmngexacthours = upcmngtimevalues[0];
                                if (upcmngAMPM == "PM") {
                                    upcmngexacthours = parseInt(upcmngexacthours);
                                    if (upcmngexacthours != "12") {
                                        upcmngexacthours = 12 + upcmngexacthours;
                                    }
                                }
                                var upcmngupdatetime = new Date(upcmngdatevalues[2], upcmngdatevalues[0] - 1, upcmngdatevalues[1], upcmngexacthours, upcmngtimevalues[1], upcmngtimevalues[2]);
                                //                            upcmngupdatetime = upcmngupdatetime.toString('dd-MM-yyyy HH:mm:ss');

                                spantime += (upcmngupdatetime - updatetime);
                                count++;
                            }
                            count--;
                            var days = Math.floor((spantime) / _MS_PER_DAY);
                            var hours = Math.floor((spantime) / _MS_PER_aaa);
                            if (hours > 24) {
                                hours = hours % 24;
                            }
                            var min = Math.floor((spantime) / _MS_PER_sss);
                            if (min > 60) {
                                min = min % 60;
                            }
                            var sec = Math.floor((spantime) / _MS_PER_ddd);
                            if (sec > 60) {
                                sec = sec % 60;
                            }
                            if (days >= 1) {
                                timestamp = "Stopped for " + days + " days " + hours + " Hrs " + min + " Min";
                            }
                            else if (hours >= 1) {
                                timestamp = "Stopped for " + hours + " Hrs " + min + " Min";
                            }
                            else if (min >= 1) {
                                timestamp = "Stopped for " + min + " Min " + sec + " Sec";
                            }
                            else if (days < 1 && min > 1) {
                                timestamp = "Stopped for " + hours + " Hrs " + min + " Min";
                            }
                            var stpdpoint = new google.maps.LatLng(
           parseFloat(Latitude),
           parseFloat(Longitude));
                            var stoppedmarker = new google.maps.Marker({
                                position: stpdpoint,
                                map: hstry_map,
                                title: timestamp,
                                icon: "Images/ssmarker.png"
                            });
                            stoppedmarkers.push(stoppedmarker);
                        }
                    }
                    var status = data[count].Status;
                    var datetime = data[count].datetime;
                    var point = new google.maps.LatLng(
              parseFloat(Latitude),
              parseFloat(Longitude));

                    if (flightPath) {
                        flightPath.setMap(null);
                    }
                    for (i = 0; i < polilinepath.length; i++) {
                        polilinepath[i].setMap(hstry_map); //or line[i].setVisible(false);
                    }
                    polilinepath = [];
                    var polylength = flightPlanCoordinates.length;
                    flightPlanCoordinates[polylength] = point;
                    polylength++;
                    var flightPath = new google.maps.Polyline({
                        path: flightPlanCoordinates,
                        strokeColor: "#0000CD",
                        strokeOpacity: 1.0,
                        strokeWeight: 2
                    });
                    flightPath.setMap(hstry_map);
                    polilinepath.push(flightPath);

                    var address = Latitude + ',' + Longitude;
                    var t = document.getElementById("example");
                    var rows = t.getElementsByTagName("tr");

                    var r = rows[rows.length - 1];
                    r.parentNode.insertBefore(getTemplateRow(), r);

                    var content = "<div>Time : " + datetime + "<br/>" + "Speed : " + speed + "<br/>" + "Address : " + address + "<br/>" + "Status : " + status + "<br/><a style='text-decoration: underline;color:blue; cursor:pointer;'  onclick='addlocations(" + Latitude + "," + Longitude + ")'>Add to My Locations</a>";
                    createInfoWindow(flightPath, content);
                    function createInfoWindow(poly, content) {
                        google.maps.event.addListener(poly, 'click', function (event) {
                            infoWindow.content = content;
                            infoWindow.position = event.latLng;
                            infoWindow.open(hstry_map);
                        });
                    }
                    if (typeof address === "undefined") {
                        var t = document.getElementById("example");
                        var rows = t.getElementsByTagName("tr");

                        var r = rows[rows.length - 1];
                        r.parentNode.insertBefore(getTemplateRow(), r);
                    }
                    function getTemplateRow() {
                        var x = document.getElementById("templateRow").cloneNode(true);
                        x.id = Latitude + "_" + Longitude + "_" + count;
                        x.style.display = "";
                        //    x.innerHTML = x.innerHTML.replace(/{id}/, ++maxID);
                        x.cells[0].innerHTML = datetime;
                        x.cells[1].innerHTML = address;
                        x.cells[2].innerHTML = speed + " Kms/Hr ";
                        x.cells[3].innerHTML = status;
                        odometer = parseFloat(odometer);
                        startodo = parseFloat(startodo);
                        var diff = odometer - startodo;
                        diff = roundToTwo(diff)
                        x.cells[4].innerHTML = diff;
                        x.cells[5].innerHTML = timestamp;
                        if (timestamp != "") {
                            x.style.backgroundColor = "#ffcccc";
                        }
                        return x;
                    }
                    $("#divscroll").scrollTop($("#divscroll").get(0).scrollHeight);
                }

            }
        }

        function roundToTwo(num) {
            return +(Math.round(num + "e+2") + "e-2");
        }

        function close_historymodel() {
            $('#div_todayhistory').css('display', 'none');
        }

        var geocoding;
        var popupcontent = "";
        function onrowclick(idval) {
            var positionarray = idval.id.split('_');
            var table = $('#example');
            var tr = $('#example').find('tr');
            var timestamp;
            var speed;
            var vehstatus;
            var stoppedtime;
            var rowCellValue;

            for (var i = 3; i < tr.length; i++) {
                var rowid = tr[i].id;
                if (rowid == idval.id) {
                    timestamp = tr[i].cells[0].innerHTML;
                    speed = tr[i].cells[2].innerHTML;
                    vehstatus = tr[i].cells[3].innerHTML;
                    stoppedtime = tr[i].cells[5].innerHTML;
                }
            }
            var point = new google.maps.LatLng(positionarray[0], positionarray[1]);
            hstry_map.panTo(point);

            var address;
            geocoder = new google.maps.Geocoder();
            address = geocoder.geocode({ 'latLng': point }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        address = results[0].formatted_address;
                        infoWindow.close();
                        infoWindow.setOptions({
                            content: "<div>Time : " + timestamp + "<br/>" + "Speed : " + speed + "<br/>" + "Address : " + address + "<br/>" + "Status : " + vehstatus + "<br/>" + "Stopped Time : " + stoppedtime + "<br/><a style='text-decoration: underline;color:blue; cursor:pointer;' onclick='addlocations(" + positionarray[0] + "," + positionarray[1] + ")'>Add to My Locations</a>",
                            position: point
                        });
                        infoWindow.open(hstry_map);
                    }
                    else {
                        address = "No results";
                        infoWindow.close();
                        infoWindow.setOptions({
                            content: "<div>Time : " + timestamp + "<br/>" + "Speed : " + speed + "<br/>" + "Address : " + address + "<br/>" + "Status : " + vehstatus + "<br/>" + "Stopped Time : " + stoppedtime + "<br/><a style='text-decoration: underline;color:blue; cursor:pointer;' onclick='addlocations(" + positionarray[0] + "," + positionarray[1] + ")'>Add to My Locations</a>",
                            position: point
                        });
                        infoWindow.open(hstry_map);
                    }
                }
            });
        }

        var tableToExcel = (function () {
            var uri = 'data:application/vnd.ms-excel;base64,'
    , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
    , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
    , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
            return function (table, name) {
                if (!table.nodeType) table = document.getElementById(table)
                var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
                window.location.href = uri + base64(format(template, ctx))
            }
        })();
    </script>
    //Reports
    <script type="text/javascript">
        function btn_generate_Click() {
            var table = document.getElementById("tbl_report");
            for (var i = table.rows.length - 1; i > 0; i--) {
                table.deleteRow(i);
            }
            table.deleteTHead();
            if (checkedvehicles.length == 0) {
                bootbox.alert("Please select vehicles to get report!");
                return;
            }
            var ckdvhvls = "";
            for (var i = 0; i < checkedvehicles.length; i++) {
                ckdvhvls += checkedvehicles[i] + ",";
            }
            ckdvhvls = ckdvhvls.slice(0, -1);
            var txtvalue = document.getElementById('txt_Reports_TimeGap').value;
            var reporttype = currentpage;
            var startdate = document.getElementById('txt_startdate').value;
            var enddate = document.getElementById('txt_enddate').value;
            var mainlocationsno = $('#slct_report_mainlocation').val();
            var mainlocationtext = $("#slct_report_mainlocation option:selected").text();

            $('#loader_report').show();
            var data = { 'op': 'getvehiclesdatareport', 'startdate': startdate, 'enddate': enddate, 'checkedvehicles': ckdvhvls, 'reporttype': reporttype, 'txtvalue': txtvalue, 'mainlocationsno': mainlocationsno, 'mainlocationtext': mainlocationtext, 'requestfrom': 'web' };
            var s = function (msg) {
                if (msg) {
                    $('#loader_report').hide();
                    vehicledatafilling(msg);
                }
                else {
                    $('#loader_report').hide();
                }
            };
            var e = function (x, h, e) {
                $('#loader_report').hide();
            };
            callHandler(data, s, e);
        }

        function vehicledatafilling(results) {
            $("#vehicles-sidebar").css('margin-left', 0);
            $("#vehicles-sidebar").css('margin-right', 0);
            $("#vehicles-sidebar").animate({ left: '-300px' }, 100);
            vehpnlhidden = true;

            $("#filters-sidebar").css('margin-left', 0);
            $("#filters-sidebar").css('margin-right', 0);
            $("#filters-sidebar").animate({ left: '-300px' }, 100);
            hidden = true;

            var table = document.getElementById("tbl_report");
            var reporttype = currentpage;
            if (reporttype == "General Report") {
                $('#tbl_report').append('<thead><tr><th scope="col">VehicleID</th><th scope="col">TotalDistanceTravelled(Kms)</th><th scope="col">WorkingHours</th><th scope="col">MotionHours</th><th scope="col">StationaryHours</th><th scope="col">MaxSpeed</th><th scope="col">AvgSpeed</th><th scope="col">IdleTime</th><th scope="col">No Of Stops</th><th scope="col">AC ONTime</th><th scope="col">MainPower OFF Time</th><th></th></tr></thead>');
                for (var i = 0; i < results.length; i++) {
                    var idvehicle_properties = results[i].idvehicle_properties;
                    var VehicleID = results[i].VehicleID;
                    var TotalDistanceTravelled = results[i].TotalDistanceTravelled;
                    var WorkingHours = results[i].WorkingHours;
                    var MotionHours = results[i].MotionHours;
                    var StationaryHours = results[i].StationaryHours;
                    var MaxSpeed = results[i].MaxSpeed;
                    var AvgSpeed = results[i].AvgSpeed;
                    var IdleTime = results[i].IdleTime;
                    var NoOfStops = results[i].NoOfStops;
                    var ACONTime = results[i].ACONTime;
                    var MainPowerOFFTime = results[i].MainPowerOFFTime;
                    var sno = results[i].sno;
                    var tablerowcnt = document.getElementById("tbl_report").rows.length;
                    $('#tbl_report').append('<tbody><tr id=' + idvehicle_properties + '><th scope="row">' + VehicleID + '</th><td data-title="TotalDistanceTravelled(Kms)">' + TotalDistanceTravelled + '</td><td data-title="WorkingHours" >' + WorkingHours + '</td><td data-title="MotionHours">' + MotionHours + '</td><td data-title="StationaryHours">' + StationaryHours + '</td><td data-title="MaxSpeed">' + MaxSpeed + '</td><td data-title="AvgSpeed">' + AvgSpeed + '</td><td data-title="IdleTime">' + IdleTime + '</td><td data-title="No Of Stops">' + NoOfStops + '</td><td data-title="AC ONTime">' + ACONTime + '</td><td data-title="MainPower OFF Time">' + MainPowerOFFTime + '</td><td><input type="button" class="btn btn-block btn-danger" name="Review" value ="Review on Map" onclick="ReviewonMap(this);"/></td></tr></tbody>');
                }
            }
            else if (reporttype == "Stoppage Report") {
                $('#tbl_report').append('<thead><tr><th scope="col">VehicleID</th><th scope="col">Location</th><th scope="col">DateTime</th><th scope="col">Stopped Time</th>');
                for (var i = 0; i < results.length; i++) {
                    var VehicleID = results[i].VehicleID;
                    var DateTime = results[i].DateTime;
                    var StoppedHours = results[i].StoppedHours;
                    var Latitude = results[i].Latitude;
                    var Longitude = results[i].Longitude;
                    $('#tbl_report').append('<tbody><tr><th scope="row">' + VehicleID + '</th><td data-title="Location">' + Latitude + ',' + Longitude + '</td><td data-title="DateTime" >' + DateTime + '</td><td data-title="Stopped Time">' + StoppedHours + '</td></tr></tbody>');
                }
            }
            else if (reporttype == "Ignition Report") {
                $('#tbl_report').append('<thead><tr><th scope="col">VehicleID</th><th scope="col">Ignition On Time</th>');
                for (var i = 0; i < results.length; i++) {
                    var Vehicleno = results[i].Vehicleno;
                    var idletime = results[i].idletime;
                    $('#tbl_report').append('<tbody><tr><th scope="row">' + Vehicleno + '</th><td data-title="IgnitionOnTime">' + idletime + '</td></tr></tbody>');
                }
            }
            else if (reporttype == "OverSpeed Report") {
                $('#tbl_report').append('<thead><tr><th scope="col">VehicleID</th><th scope="col">Location</th><th scope="col">DateTime</th><th scope="col">Speed</th>');
                for (var i = 0; i < results.length; i++) {
                    var VehicleID = results[i].VehicleID;
                    var DateTime = results[i].DateTime;
                    var Speed = results[i].Speed;
                    var Latitude = results[i].Latitude;
                    var Longitude = results[i].Longitude;
                    $('#tbl_report').append('<tbody><tr><th scope="row">' + VehicleID + '</th><td data-title="Location">' + Latitude + ',' + Longitude + '</td><td data-title="DateTime" >' + DateTime + '</td><td data-title="Speed">' + Speed + '</td></tr></tbody>');
                }
            }
            else if (reporttype == "Daily Report") {
                $('#tbl_report').append('<thead><tr><th scope="col">SNo</th><th scope="col">VehicleID</th><th scope="col">StartDate</th><th scope="col">StartTime</th><th scope="col">StopDate</th><th scope="col">StopTime</th><th scope="col">TotalDistanceTravelled</th><th scope="col">MotionHours</th><th scope="col">StationaryHours</th><th scope="col">MaxSpeed</th><th scope="col">AvgSpeed</th><th scope="col">IdleTime</th><th></th></tr></thead>');
                for (var i = 0; i < results.length; i++) {
                    var idvehicle_properties = results[i].idvehicle_properties;
                    var VehicleID = results[i].VehicleID;
                    var StartDate = results[i].StartDate;
                    var StartTime = results[i].StartTime;
                    var StopDate = results[i].StopDate;
                    var StopTime = results[i].StopTime;
                    var TotalDistanceTravelled = results[i].TotalDistanceTravelled;
                    var MotionHours = results[i].MotionHours;
                    var StationaryHours = results[i].StationaryHours;
                    var MaxSpeed = results[i].MaxSpeed;
                    var AvgSpeed = results[i].AvgSpeed;
                    var IdleTime = results[i].IdleTime;
                    var sno = results[i].sno;
                    var tablerowcnt = document.getElementById("tbl_report").rows.length;
                    $('#tbl_report').append('<tbody><tr id=' + idvehicle_properties + '><th>' + (i + 1) + '</th><th scope="row">' + VehicleID + '</th><td data-title="StartDate">' + StartDate + '</td><td data-title="StartTime" >' + StartTime + '</td><td data-title="StopDate">' + StopDate + '</td><td data-title="StopTime">' + StopTime + '</td><td data-title="TotalDistanceTravelled">' + TotalDistanceTravelled + '</td><td data-title="MotionHours">' + MotionHours + '</td><td data-title="StationaryHours">' + StationaryHours + '</td><td data-title="MaxSpeed">' + MaxSpeed + '</td><td data-title="AvgSpeed">' + AvgSpeed + '</td><td data-title="IdleTime">' + IdleTime + '</td><td><input type="button" class="btn btn-block btn-danger" name="Review" value ="Review on Map" onclick="ReviewonMap(this);"/></td></tr></tbody>');
                }
            }
            else if (reporttype == "Location HaltingHours Report") {
                $('#tbl_report').append('<thead><tr><th scope="col">VehicleID</th><th scope="col">LocationName</th><th scope="col">VehicleEnteredDate</th><th scope="col">VehicleEnteredTime</th><th scope="col">VehicleLeftDate</th><th scope="col">VehicleLeftTime</th><th scope="col">StoppedHours</th><th></th></tr></thead>');
                for (var i = 0; i < results.length; i++) {
                    var VehicleID = results[i].VehicleID;
                    var LocationName = results[i].LocationName;
                    var VehicleEnteredDate = results[i].VehicleEnteredDate;
                    var VehicleEnteredTime = results[i].VehicleEnteredTime;
                    var VehicleLeftDate = results[i].VehicleLeftDate;
                    var VehicleLeftTime = results[i].VehicleLeftTime;
                    var StoppedHours = results[i].StoppedHours;
                    $('#tbl_report').append('<tbody><tr><th scope="row">' + VehicleID + '</th><td data-title="LocationName">' + LocationName + '</td><td data-title="VehicleEnteredDate" >' + VehicleEnteredDate + '</td><td data-title="VehicleEnteredTime">' + VehicleEnteredTime + '</td><td data-title="VehicleLeftDate">' + VehicleLeftDate + '</td><td data-title="VehicleLeftTime">' + VehicleLeftTime + '</td><td data-title="StoppedHours">' + StoppedHours + '</td></tr></tbody>');
                }
            }
            else if (reporttype == "Location to Location Report") {
                $('#tbl_report').append('<thead><tr><th scope="col">VehicleID</th><th scope="col">FromLocation</th><th scope="col">StartingDate</th><th scope="col">StartingTime</th><th scope="col">ToLocation</th><th scope="col">ReachingDate</th><th scope="col">ReachingTime</th><th scope="col">Distance</th><th scope="col">JourneyHours</th><th></th><th><input type="button" class="btn btn-block btn-warning" name="Compare" value ="Compare" onclick="btn_compare_Click();"/></th></tr></thead>');
                for (var i = 0; i < results.length; i++) {
                    var idvehicle_properties = results[i].idvehicle_properties;
                    var VehicleID = results[i].VehicleID;
                    var FromLocation = results[i].FromLocation;
                    var StartingDate = results[i].StartingDate;
                    var StartingTime = results[i].StartingTime;
                    var ToLocation = results[i].ToLocation;
                    var ReachingDate = results[i].ReachingDate;
                    var ReachingTime = results[i].ReachingTime;
                    var Distance = results[i].Distance;
                    var JourneyHours = results[i].JourneyHours;
                    $('#tbl_report').append('<tbody><tr id=' + idvehicle_properties + '><th scope="row">' + VehicleID + '</th><td data-title="FromLocation">' + FromLocation + '</td><td data-title="StartingDate" >' + StartingDate + '</td><td data-title="StartingTime">' + StartingTime + '</td><td data-title="ToLocation">' + ToLocation + '</td><td data-title="ReachingDate">' + ReachingDate + '</td><td data-title="ReachingTime">' + ReachingTime + '</td><td data-title="Distance">' + Distance + '</td><td data-title="JourneyHours">' + JourneyHours + '</td><td><input type="checkbox" class="ckbx_compare"/></td><td><input type="button" class="btn btn-block btn-danger" name="Review" value ="Review on Map" onclick="ReviewonMap(this);"/></td></tr></tbody>');
                }
            }
            else if (reporttype == "MainLocationWise Report") {
                $('#tbl_report').append('<thead><tr><th scope="col">VehicleID</th><th scope="col">MainLocation</th><th scope="col">StartingDate</th><th scope="col">StartingTime</th><th scope="col">ReachingDate</th><th scope="col">ReachingTime</th><th scope="col">Distance</th><th scope="col">JourneyHours</th><th scope="col">Reached Locations</th><th></th><th><input type="button" class="btn btn-block btn-warning" name="Compare" value ="Compare" onclick="btn_compare_Click();"/></th></tr></thead>');
                for (var i = 0; i < results.length; i++) {
                    var idvehicle_properties = results[i].idvehicle_properties;
                    var VehicleID = results[i].VehicleID;
                    var MainLocation = results[i].MainLocation;
                    var StartingDate = results[i].StartingDate;
                    var StartingTime = results[i].StartingTime;
                    var ReachingDate = results[i].ReachingDate;
                    var ReachingTime = results[i].ReachingTime;
                    var Distance = results[i].Distance;
                    var JourneyHours = results[i].JourneyHours;
                    var ReachedLocations = results[i].ReachedLocations;
                    $('#tbl_report').append('<tbody><tr id=' + idvehicle_properties + '><th scope="row">' + VehicleID + '</th><td data-title="FromLocation">' + MainLocation + '</td><td data-title="StartingDate" >' + StartingDate + '</td><td data-title="StartingTime">' + StartingTime + '</td><td data-title="ReachingDate">' + ReachingDate + '</td><td data-title="ReachingTime">' + ReachingTime + '</td><td data-title="Distance">' + Distance + '</td><td data-title="JourneyHours">' + JourneyHours + '</td><td data-title="ReachedLocations">' + ReachedLocations + '</td><td><input type="checkbox" class="ckbx_compare"/></td><td><input type="button" class="btn btn-block btn-danger" name="Review" value ="Review on Map" onclick="ReviewonMap(this);"/></td></tr></tbody>');
                }
            }
            else if (reporttype == "AM/PM Trip Report") {
                $('#tbl_report').append('<thead><tr><th scope="col">VehicleID</th><th scope="col">Date</th><th scope="col">Route Name</th><th scope="col">AM StartTime</th><th scope="col">AM EndTime</th><th scope="col">AM GPS KMS</th><th scope="col">AM EMPTY KMS</th><th scope="col">AM TOTAL KMS</th><th scope="col">PM StartTime</th><th scope="col">PM EndTime</th><th scope="col">PM GPS KMS</th><th scope="col">PM EMPTY KMS</th><th scope="col">PM TOTAL KMS</th><th scope="col">Total KMS</th><th></th><th><input type="button" class="btn btn-block btn-warning" name="Compare" value ="Compare" onclick="btn_compare_Click();"/></th></tr></thead>');
                for (var i = 0; i < results.length; i++) {
                    var idvehicle_properties = results[i].idvehicle_properties;
                    var VehicleID = results[i].VehicleID;
                    var Date = results[i].Date;
                    var RouteName = results[i].RouteName;
                    var AMStartTime = results[i].AMStartTime;
                    var AMEndTime = results[i].AMEndTime;
                    var AMGPSKMS = results[i].AMGPSKMS;
                    var AMEMPTYKMS = results[i].AMEMPTYKMS;
                    var AMTOTALKMS = results[i].AMTOTALKMS;
                    var PMStartTime = results[i].PMStartTime;
                    var PMEndTime = results[i].PMEndTime;
                    var PMGPSKMS = results[i].PMGPSKMS;
                    var PMEMPTYKMS = results[i].PMEMPTYKMS;
                    var PMTOTALKMS = results[i].PMTOTALKMS;
                    var TotalKMS = results[i].TotalKMS;
                    if (i == results.length - 1)
                        $('#tbl_report').append('<tbody><tr id=' + idvehicle_properties + '><th scope="row">' + VehicleID + '</th><td data-title="Date">' + Date + '</td><td data-title="RouteName" >' + RouteName + '</td><td data-title="AMStartTime">' + AMStartTime + '</td><td data-title="AMEndTime">' + AMEndTime + '</td><td data-title="AMGPSKMS">' + AMGPSKMS + '</td><td data-title="AMEMPTYKMS">' + AMEMPTYKMS + '</td><td data-title="AMTOTALKMS">' + AMTOTALKMS + '</td><td data-title="PMStartTime">' + PMStartTime + '</td><td data-title="PMEndTime">' + PMEndTime + '</td><td data-title="PMGPSKMS">' + PMGPSKMS + '</td><td data-title="PMEMPTYKMS">' + PMEMPTYKMS + '</td><td data-title="PMTOTALKMS">' + PMTOTALKMS + '</td><td data-title="TotalKMS">' + TotalKMS + '</td><td></td><td></td></tr></tbody>');
                    else
                        $('#tbl_report').append('<tbody><tr id=' + idvehicle_properties + '><th scope="row">' + VehicleID + '</th><td data-title="Date">' + Date + '</td><td data-title="RouteName" >' + RouteName + '</td><td data-title="AMStartTime">' + AMStartTime + '</td><td data-title="AMEndTime">' + AMEndTime + '</td><td data-title="AMGPSKMS">' + AMGPSKMS + '</td><td data-title="AMEMPTYKMS">' + AMEMPTYKMS + '</td><td data-title="AMTOTALKMS">' + AMTOTALKMS + '</td><td data-title="PMStartTime">' + PMStartTime + '</td><td data-title="PMEndTime">' + PMEndTime + '</td><td data-title="PMGPSKMS">' + PMGPSKMS + '</td><td data-title="PMEMPTYKMS">' + PMEMPTYKMS + '</td><td data-title="PMTOTALKMS">' + PMTOTALKMS + '</td><td data-title="TotalKMS">' + TotalKMS + '</td><td><input type="checkbox" class="ckbx_compare"/></td><td><input type="button" class="btn btn-block btn-danger" name="Review" value ="Draw AM Trip" onclick="DrawAMTrip(this);"/><input type="button" class="btn btn-block btn-danger" name="Review" value ="Draw PM Trip" onclick="DrawPMTrip(this);"/></td></tr></tbody>');
                }
            }
        }

        function DrawAMTrip(thisid) {
            var clickedrow = $(thisid).parents("tr");
            var vehicleno = clickedrow[0].id;
            var startdatetime = clickedrow[0].cells[1].innerHTML + " " + clickedrow[0].cells[3].innerHTML + ":00";
            var enddatetime = clickedrow[0].cells[1].innerHTML + " " + clickedrow[0].cells[4].innerHTML + ":00";
            var data = { 'op': 'OnclickDrawRoute', 'vehicleno': vehicleno, 'reporttype': "Location to Location Report", 'startdatetime': startdatetime, 'enddatetime': enddatetime };
            var s = function (msg) {
                if (msg) {
                    if (msg == "OK") {
                        var windowsize = $(window).width();
                        if (windowsize > 767) {
                            window.open("RouteHistory.html", "_blank");
                        }
                        else {
                            window.open("../Client/Drawroute.html", "_blank");
                            //window.location = '../Client/Drawroute.html';
                        }
                    }
                    else {
                        bootbox.alert("Error,Please try again later");
                        return;
                    }
                }
                else {
                }
            };
            var e = function (x, h, e) {
            };
            callHandler(data, s, e);
        }

        function btn_compare_Click() {
            var chkcnt = 1;
            var vehicle1 = "";
            var fromdate1 = "";
            var todate1 = "";
            var vehicle2 = "";
            var fromdate2 = "";
            var todate2 = "";
            var reporttype = currentpage;
            $('#tbl_report tr').not(":first").each(function () {
                if ($(this).find('.ckbx_compare').prop('checked') == true) {
                    chkcnt++;
                    if (reporttype == "AM/PM Trip Report") {
                        if (chkcnt > 2) {
                            return;
                        }
                    }
                    else {
                        if (chkcnt > 3) {
                            return;
                        }
                    }

                    if (chkcnt == 2) {
                        if (reporttype == "AM/PM Trip Report") {
                            vehicle1 = $(this).attr('id');
                            var frmdtary = $(this).children('td:eq(0)').html().split('/');
                            if (parseInt(frmdtary[0]) <= 10)
                                frmdtary[0] = "0" + frmdtary[0];
                            if (parseInt(frmdtary[1]) <= 10)
                                frmdtary[1] = "0" + frmdtary[1];
                            fromdate1 = frmdtary[2] + "-" + frmdtary[0] + "-" + frmdtary[1] + "T" + $(this).children('td:eq(2)').html() + ":00";
                            var todtary = $(this).children('td:eq(0)').html().split('/');
                            if (parseInt(todtary[0]) <= 10)
                                todtary[0] = "0" + todtary[0];
                            if (parseInt(todtary[1]) <= 10)
                                todtary[1] = "0" + todtary[1];
                            todate1 = todtary[2] + "-" + todtary[0] + "-" + todtary[1] + "T" + $(this).children('td:eq(3)').html() + ":00";

                            vehicle2 = $(this).attr('id');
                            var frmdtary = $(this).children('td:eq(0)').html().split('/');
                            if (parseInt(frmdtary[0]) <= 10)
                                frmdtary[0] = "0" + frmdtary[0];
                            if (parseInt(frmdtary[1]) <= 10)
                                frmdtary[1] = "0" + frmdtary[1];
                            fromdate2 = frmdtary[2] + "-" + frmdtary[0] + "-" + frmdtary[1] + "T" + $(this).children('td:eq(7)').html() + ":00";
                            var todtary = $(this).children('td:eq(0)').html().split('/');
                            if (parseInt(todtary[0]) <= 10)
                                todtary[0] = "0" + todtary[0];
                            if (parseInt(todtary[1]) <= 10)
                                todtary[1] = "0" + todtary[1];
                            todate2 = todtary[2] + "-" + todtary[0] + "-" + todtary[1] + "T" + $(this).children('td:eq(8)').html() + ":00";
                        }
                        else {
                            vehicle1 = $(this).attr('id');
                            if (reporttype == "MainLocationWise Report") {
                                var frmdtary = $(this).children('td:eq(1)').html().split('/');
                                if (parseInt(frmdtary[0]) <= 10)
                                    frmdtary[0] = "0" + frmdtary[0];
                                if (parseInt(frmdtary[1]) <= 10)
                                    frmdtary[1] = "0" + frmdtary[1];
                                fromdate1 = frmdtary[2] + "-" + frmdtary[0] + "-" + frmdtary[1] + "T" + $(this).children('td:eq(2)').html() + ":00";
                                var todtary = $(this).children('td:eq(3)').html().split('/');
                                if (parseInt(todtary[0]) <= 10)
                                    todtary[0] = "0" + todtary[0];
                                if (parseInt(todtary[1]) <= 10)
                                    todtary[1] = "0" + todtary[1];
                                todate1 = todtary[2] + "-" + todtary[0] + "-" + todtary[1] + "T" + $(this).children('td:eq(4)').html() + ":00";
                            }
                            else {
                                var frmdtary = $(this).children('td:eq(1)').html().split('/');
                                if (parseInt(frmdtary[0]) <= 10)
                                    frmdtary[0] = "0" + frmdtary[0];
                                if (parseInt(frmdtary[1]) <= 10)
                                    frmdtary[1] = "0" + frmdtary[1];
                                fromdate1 = frmdtary[2] + "-" + frmdtary[0] + "-" + frmdtary[1] + "T" + $(this).children('td:eq(2)').html() + ":00";
                                var todtary = $(this).children('td:eq(4)').html().split('/');
                                if (parseInt(todtary[0]) <= 10)
                                    todtary[0] = "0" + todtary[0];
                                if (parseInt(todtary[1]) <= 10)
                                    todtary[1] = "0" + todtary[1];
                                todate1 = todtary[2] + "-" + todtary[0] + "-" + todtary[1] + "T" + $(this).children('td:eq(5)').html() + ":00";
                            }
                        }
                    }
                    else {
                        vehicle2 = $(this).attr('id');
                        if (reporttype == "MainLocationWise Report") {
                            var frmdtary = $(this).children('td:eq(1)').html().split('/');
                            if (parseInt(frmdtary[0]) <= 10)
                                frmdtary[0] = "0" + frmdtary[0];
                            if (parseInt(frmdtary[1]) <= 10)
                                frmdtary[1] = "0" + frmdtary[1];
                            fromdate2 = frmdtary[2] + "-" + frmdtary[0] + "-" + frmdtary[1] + "T" + $(this).children('td:eq(2)').html() + ":00";
                            var todtary = $(this).children('td:eq(3)').html().split('/');
                            if (parseInt(todtary[0]) <= 10)
                                todtary[0] = "0" + todtary[0];
                            if (parseInt(todtary[1]) <= 10)
                                todtary[1] = "0" + todtary[1];
                            todate2 = todtary[2] + "-" + todtary[0] + "-" + todtary[1] + "T" + $(this).children('td:eq(4)').html() + ":00";
                        }
                        else {
                            var frmdtary = $(this).children('td:eq(1)').html().split('/');
                            if (parseInt(frmdtary[0]) <= 10)
                                frmdtary[0] = "0" + frmdtary[0];
                            if (parseInt(frmdtary[1]) <= 10)
                                frmdtary[1] = "0" + frmdtary[1];
                            fromdate2 = frmdtary[2] + "-" + frmdtary[0] + "-" + frmdtary[1] + "T" + $(this).children('td:eq(2)').html() + ":00";
                            var todtary = $(this).children('td:eq(4)').html().split('/');
                            if (parseInt(todtary[0]) <= 10)
                                todtary[0] = "0" + todtary[0];
                            if (parseInt(todtary[1]) <= 10)
                                todtary[1] = "0" + todtary[1];
                            todate2 = todtary[2] + "-" + todtary[0] + "-" + todtary[1] + "T" + $(this).children('td:eq(5)').html() + ":00";
                        }
                    }
                }
            });
            if (reporttype == "AM/PM Trip Report") {
                if (chkcnt == 2) {
                    window.open('CompareRoutes.html?fromtime1=' + fromdate1 + '&totime1=' + todate1 + '&vehicle1=' + vehicle1 + '&fromtime2=' + fromdate2 + '&totime2=' + todate2 + '&vehicle2=' + vehicle2 + '', '_blank');
                }
                else {
                    bootbox.alert('Please select only one row to compare!');
                    return;
                }
            }
            else {
                if (chkcnt == 3) {
                    window.open('CompareRoutes.html?fromtime1=' + fromdate1 + '&totime1=' + todate1 + '&vehicle1=' + vehicle1 + '&fromtime2=' + fromdate2 + '&totime2=' + todate2 + '&vehicle2=' + vehicle2 + '', '_blank');
                }
                else {
                    bootbox.alert('Please select only two rows to compare!');
                    return;
                }
            }
        }

        function ReviewonMap(thisid) {
            var clickedrow = $(thisid).parents("tr");
            var vehicleno = "";
            var startdatetime = "";
            var enddatetime = "";
            var reporttype = currentpage;
            vehicleno = clickedrow[0].id;
            if (reporttype == "Location to Location Report") {
                startdatetime = clickedrow[0].cells[2].innerHTML + " " + clickedrow[0].cells[3].innerHTML + ":00";
                enddatetime = clickedrow[0].cells[5].innerHTML + " " + clickedrow[0].cells[6].innerHTML + ":00";
            }
            else if (reporttype == "MainLocationWise Report") {
                startdatetime = clickedrow[0].cells[2].innerHTML + " " + clickedrow[0].cells[3].innerHTML + ":00";
                enddatetime = clickedrow[0].cells[4].innerHTML + " " + clickedrow[0].cells[5].innerHTML + ":00";
            }
            else if (reporttype == "Daily Report") {
                vehicleno = clickedrow[0].cells[0].innerHTML
            }
            var data = { 'op': 'OnclickDrawRoute', 'vehicleno': vehicleno, 'reporttype': reporttype, 'startdatetime': startdatetime, 'enddatetime': enddatetime };
            var s = function (msg) {
                if (msg) {
                    if (msg == "OK") {
                        var windowsize = $(window).width();
                        if (windowsize > 767) {
                            window.open("RouteHistory.html", "_blank");
                        }
                        else {
                            window.open("../Client/Drawroute.html", "_blank");
                            //window.location = '../Client/Drawroute.html';
                        }
                    }
                    else {
                        bootbox.alert("Error,Please try again later");
                        return;
                    }
                }
                else {
                }
            };
            var e = function (x, h, e) {
            };
            callHandler(data, s, e);
        }
    </script>
</body>
</html>
